<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Keysight.Ccl.Wsl</name>
    </assembly>
    <members>
        <member name="T:Keysight.Cdf.BuildInfo">
            <summary>
            Constants specific to this particular nightly build. 
            </summary>
        </member>
        <member name="F:Keysight.Cdf.BuildInfo.VersionString">
            <summary>
            The string representation of the full 4-part build version number.
            </summary>
        </member>
        <member name="F:Keysight.Cdf.BuildInfo.Configuration">
            <summary>Debug for debug builds, otherwise an empty string.</summary>
        </member>
        <member name="F:Keysight.Cdf.BuildInfo.Company">
            <summary>
            The company name.
            </summary>
        </member>
        <member name="F:Keysight.Cdf.BuildInfo.Product">
            <summary>
            The product name.
            </summary>
        </member>
        <member name="F:Keysight.Cdf.BuildInfo.Copyright">
            <summary>
            The copyright.
            </summary>
        </member>
        <member name="F:Keysight.Cdf.BuildInfo.PublicKeyString">
            <summary>
            The CDF PublicKey for this build, as a string.
            </summary>
        </member>
        <member name="F:Keysight.Cdf.BuildInfo.QualifiedAssemblySuffix">
            <summary>
            The suffix to put on an assembly name to qualify it with the CDF public key.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.CloseButtonTooltip">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.DialogCollapseButtonTooltip">
            <summary>
              Looks up a localized string similar to Collapse to Title Bar Only.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.DialogExpandButtonTooltip">
            <summary>
              Looks up a localized string similar to Restore to Normal Size.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.HelpButtonTooltip">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.MaximizeButtonTooltip">
            <summary>
              Looks up a localized string similar to Maximize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.MinimizeButtonTooltip">
            <summary>
              Looks up a localized string similar to Minimize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ChromeSkinFragmentRes.RestoreButtonTooltip">
            <summary>
              Looks up a localized string similar to Restore Down.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.ColorSchemesLabel">
            <summary>
              Looks up a localized string similar to Color scheme:.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.FontGroupLabel">
            <summary>
              Looks up a localized string similar to Font settings:.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.FontToggleButtonTooltipDefault">
            <summary>
              Looks up a localized string similar to Default.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.FontToggleButtonTooltipLocal">
            <summary>
              Looks up a localized string similar to Local.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.SkinSettingsGroupBoxHeader">
            <summary>
              Looks up a localized string similar to Skin Settings.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.CommonDisplaySettingsRes.SkinsLabel">
            <summary>
              Looks up a localized string similar to Skin:.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.AssemblyVersionColumnHeaderText">
            <summary>
              Looks up a localized string similar to Assembly Version.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.CloseButtonText">
            <summary>
              Looks up a localized string similar to _Close.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.CopyToClipboardButtonText">
            <summary>
              Looks up a localized string similar to Co_py to Clipboard.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.FileVersionColumnHeaderText">
            <summary>
              Looks up a localized string similar to File Version.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.NameColumnHeaderText">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.PathColumnHeaderText">
            <summary>
              Looks up a localized string similar to Path.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.TimestampColumnHeaderText">
            <summary>
              Looks up a localized string similar to Timestamp.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.ModuleVersionInfoWindowRes.TitleBarText_F1">
            <summary>
              Looks up a localized string similar to {0} Diagnostic Information.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Properties.AboutBoxWindowRes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.AboutBoxWindowRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.AboutBoxWindowRes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.AboutBoxWindowRes.CloseButtonText">
            <summary>
              Looks up a localized string similar to _Close.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.AboutBoxWindowRes.OptionsLabelText">
            <summary>
              Looks up a localized string similar to Installed options:.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.AboutBoxWindowRes.SupportCommandText">
            <summary>
              Looks up a localized string similar to Support.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.AboutBoxWindowRes.TitleBarText_F1">
            <summary>
              Looks up a localized string similar to About {0}.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Properties.SplashScreenWindowRes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.SplashScreenWindowRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.SplashScreenWindowRes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.SplashScreenWindowRes.CancelButtonText">
            <summary>
              Looks up a localized string similar to _Cancel.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.SplashScreenWindowRes.CancelButtonTooltip">
            <summary>
              Looks up a localized string similar to Cancel application startup.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Properties.TextViewWindowRes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.TextViewWindowRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.TextViewWindowRes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.TextViewWindowRes.CloseButtonText">
            <summary>
              Looks up a localized string similar to _Close.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.DelegateCommandDelegatesCannotBeNull">
            <summary>
              Looks up a localized string similar to Both the executeMethod and the canExecuteMethod delegates cannot be null..
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.FontSizeValidationRule_InvalidDecimalNumber">
            <summary>
              Looks up a localized string similar to Font size must be a valid decimal number..
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.FontSizeValidationRule_MustBeValidDecimalNumber">
            <summary>
              Looks up a localized string similar to Font size must be a valid decimal number..
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.FontSizeValidationRule_ValidSizeRange_F2">
            <summary>
              Looks up a localized string similar to Font size must be between {0:F1} and {1:F1}..
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.FontSizeValidatioRule_SizeNotValidDouble">
            <summary>
              Looks up a localized string similar to Font size is not within the valid range of a double..
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerBandCmdText">
            <summary>
              Looks up a localized string similar to Marker Band.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerDeltaCmdText">
            <summary>
              Looks up a localized string similar to Marker Delta.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerFixedCmdText">
            <summary>
              Looks up a localized string similar to Marker Fixed.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerGateCmdText">
            <summary>
              Looks up a localized string similar to Marker Gate.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerNextHigherPeakCmdText">
            <summary>
              Looks up a localized string similar to Move Marker to Next Higher Peak.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerNextLowerPeakCmdText">
            <summary>
              Looks up a localized string similar to Move Marker to Next Lower Peak.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerNextPeakLeftCmdText">
            <summary>
              Looks up a localized string similar to Move Marker to Next Peak Left.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerNextPeakRightCmdText">
            <summary>
              Looks up a localized string similar to Move Marker to Next Peak Right.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerNormalCmdText">
            <summary>
              Looks up a localized string similar to Marker Normal.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerOffCmdText">
            <summary>
              Looks up a localized string similar to Marker Off.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerPointerCmdText">
            <summary>
              Looks up a localized string similar to Marker Pointer.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerScaleCmdText">
            <summary>
              Looks up a localized string similar to Marker Scale.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerToMinimumCmdText">
            <summary>
              Looks up a localized string similar to Move Marker to Minimum.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.Properties.Resources.MarkerToPeakCmdText">
            <summary>
              Looks up a localized string similar to Move Marker to Peak.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementFocusBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementFocusBehavior.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementFocusBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementFocusBehavior.ActivateFocus">
            <summary>
            Gets or sets a value indicating whether [focus element].
            </summary>
            <value>
              <c>true</c> if [focus element]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementFocusBehavior.OnActivateFocusChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [focus element changed].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementFocusBehavior.SelectAllOnFocus">
            <summary>
            Gets or sets a value indicating whether [select all on focus].
            </summary>
            <value>
              <c>true</c> if [select all on focus]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementFocusBehavior.FocusedElement">
            <summary>
            Gets or sets the focused element.
            </summary>
            <value>
            The focused element.
            </value>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.HyperlinkKeyboardInvocationBehavior">
            <summary>
            Expression blend behavior that supports keyboard stroke invocations of the Hyperlink.
            Currently we only support the "space" bar invocation
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.HyperlinkKeyboardInvocationBehavior.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.HyperlinkKeyboardInvocationBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior">
            <summary>
            Scroll to the selected item in a ListBox, or ListView
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior.NeedUpdateScrollPosition">
            <summary>
            Gets or sets a value indicating whether [need update scroll position].
            </summary>
            <value>
            <c>true</c> if [need update scroll position]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior.NeedUpdateScrollPositionProperty">
            <summary>
            The need update scroll position property
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior.OnUpdateScrollPositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [update scroll position changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior.AssociatedObject_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event of the AssociatedObject control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.ListBoxScrollIntoViewBehavior.ScrollToView">
            <summary>
            Scrolls to view.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementValidationBehavior">
            <summary>
            Notify databound consumers of an error condition on the target control
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementValidationBehavior.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementValidationBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementValidationBehavior.HasErrorChanged(System.Object,System.EventArgs)">
            <summary>
            Determines whether [has error changed] [the specified sender].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementValidationBehavior.HasError">
            <summary>
            Gets or sets a value indicating whether this instance has error.
            </summary>
            <value>
              <c>true</c> if this instance has error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.FrameworkElementValidationBehavior.HasErrorProperty">
            <summary>
            The has error property
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.TextBlockAutoCollapseBehavior">
            <summary>
            Behavior to auto-collapse a TextBlock if there is no content
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBlockAutoCollapseBehavior.OnAttached">
            <summary>
            Called when the behavior is attached to its target control
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBlockAutoCollapseBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxAutoCollapseBehavior">
            <summary>
            Behavior to auto-collapse a textbox if there is no content
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxAutoCollapseBehavior.OnAttached">
            <summary>
            Called when the behavior is attached to its target control
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxAutoCollapseBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxNumericEntryBehavior">
            <summary>
            Simple behavior to restrict textbox entry to digits only
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxNumericEntryBehavior.OnAttached">
            <summary>
            Called when attached to a TextBox.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxNumericEntryBehavior.OnClipboardPaste(System.Object,System.Windows.DataObjectPastingEventArgs)">
            <summary>
            This method handles paste and drag/drop events onto the TextBox.  It restricts the character
            set and ensures we have consistent behavior.
            </summary>
            <param name="sender">TextBox sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxNumericEntryBehavior.OnPreviewTextInput(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            This checks if the resulting string will match the regex expression
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxNumericEntryBehavior.Validate(System.String)">
            <summary>
            Validates the specified new content.
            </summary>
            <param name="newContent">The new content.</param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxNumericEntryBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxSelectAllContentBehavior">
            <summary>
            Auto selects the content on focus or click
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxSelectAllContentBehavior.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxSelectAllContentBehavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.TextBoxSelectAllContentBehavior.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [got focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorAnimationType">
            <summary>
            Enum for the various supported animation types
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorAnimationType.None">
            <summary>
            None = no animation should be applied
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorAnimationType.SlideInFromFarLeftStoryboard">
            <summary>
            Animation that causes its target to slide in from the far left
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorAnimationType.AppearanceFromLeftStoryboard2">
            <summary>
            Animation that causes the target to fade in from the left. Slightly different from the other one
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorAnimationType.AppearanceFromLeftStoryboard">
            <summary>
            Standard animation that causes the target to fade in from the left
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorAnimationType.BounceOutStoryboard">
            <summary>
            Animation that causes the target to bounce (scale) out
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType">
            <summary>
            Enum for the supported triggers to instigate an animation
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.OnVisible">
            <summary>
            Trigger for when the target becomes visible
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.OnHidden">
            <summary>
            Trigger for when the target becomes hidden
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.OnPreviewMouseLeftButtonUp">
            <summary>
            Trigger when previewing the mouse left button up
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.OnMouseLeftButtonUp">
            <summary>
            Trigger on mouse left button up
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.OnMouseLeftButtonDown">
            <summary>
            Trigger on mouse left button down
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.OnMouseEnter">
            <summary>
            Trigger on mouse enter
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType.OnMouseExit">
            <summary>
            Trigger on mouse exit
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior">
            <summary>
            Interaction logic for AnimatingUIElementBehavior.xaml
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.AnimationSkin">
            <summary>
            The shared Animation skin to be reused by any consumer of this behavior
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.UIElementAnimationsTarget">
            <summary>
            Property for the animation target
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.Animation">
            <summary>
            The animation that will be applied to the target
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.AnimationProperty">
            <summary>
            Dependency property for the active animation
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.Trigger">
            <summary>
            .NET property that fronts the trigger to be used to invoke the animation
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.TriggerProperty">
            <summary>
            Dependency property for the active trigger of the animation
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.OnAttached">
            <summary>
            Called when the consumer of this behavior is instantiated
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.OnDetaching">
            <summary>
            Typically only called if a consumer programatically detaches from the behavior
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehavior.BeginAnimationBehavior">
            <summary>
            Given the target and the animation directly instigate the animation without depending on a trigger
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorExtensions">
            <summary>
            Extension class to allow clients to invoked animations directly without a trigger instigating it
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorExtensions.InvokeUIElementAnimationsBehavior(System.Windows.UIElement)">
            <summary>
            Method to invoke the active target with the active animation
            </summary>
            <param name="animationTarget"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorExtensions.SetAnimationUIElementBehavior(System.Windows.DependencyObject,Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorAnimationType)">
            <summary>
            Method to set the active animation for the active target
            </summary>
            <param name="animationTarget"></param>
            <param name="type"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorExtensions.GetAnimationUIElementBehavior(System.Windows.DependencyObject)">
            <summary>
            Inquire about the current animation for the current target
            </summary>
            <param name="animationTarget"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorExtensions.SetTriggerUIElementBehavior(System.Windows.DependencyObject,Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorTriggerType)">
            <summary>
            Set the trigger that will invoke the animation
            </summary>
            <param name="animationTarget"></param>
            <param name="trigger"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementAnimationsBehaviorExtensions.GetTriggerUIElementBehavior(System.Windows.DependencyObject)">
            <summary>
            Retrieve the current trigger being used for the active animation and target
            </summary>
            <param name="animationTarget"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Behaviors.UIElementForwardScrollEventsBehavior">
            <summary>
             Behavior to allow parent/containing controls to also receive a scroll event when the mouse is inside of an inner/child control that could be hogging those same events
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementForwardScrollEventsBehavior.OnAttached">
            <summary>
            Called when behavior target is instantiated. Equivalent of a constructor for a behavior
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Behaviors.UIElementForwardScrollEventsBehavior.OnDetaching">
            <summary>
            Typically only called if a consumer programatically detaches from the behavior
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.WslSkinnedSpinnerControl">
            <summary>
            Interaction logic for WslSpinnerControl.xaml
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.WslSpinnerControl">
            <summary>
            Interaction logic for WslSpinnerControl.xaml
            </summary>
            <summary>
            WslSpinnerControl
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.WslSpinnerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.WslResizableSidePanelControl">
             <summary>
             Follow steps 1a or 1b and then 2 to use this custom control in a XAML file.
            
             Step 1a) Using this custom control in a XAML file that exists in the current project.
             Add this XmlNamespace attribute to the root element of the markup file where it is
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:Keysight.Ccl.Wsl.UI.Controls"
            
            
             Step 1b) Using this custom control in a XAML file that exists in a different project.
             Add this XmlNamespace attribute to the root element of the markup file where it is
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:Keysight.Ccl.Wsl.UI.Controls;assembly=Keysight.Ccl.Wsl"
            
             You will also need to add a project reference from the project where the XAML file lives
             to this project and Rebuild to avoid compilation errors:
            
                 Right click on the target project in the Solution Explorer and
                 "Add Reference"->"Projects"->[Browse to and select this project]
            
            
             Step 2)
             Go ahead and use your control in the XAML file.
            
                 &lt;MyNamespace:WslResizableSidePanelControl/&gt; 
            
             </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.CommonDisplaySettingsUserControl">
            <summary>
            CommonDisplaySettingsUserControl
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.CommonDisplaySettingsUserControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage">
            <summary>
            Interaction logic for KeysightLogoImage.xaml.
            </summary>
            <summary>
            KeysightLogoImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.#ctor">
            <summary>
            Creates a new instance of the KeysightLogoImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.DefaultForegroundColor">
            <summary>
            Default Foreground color.
            </summary>        
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.DefaultWaveForegroundColor">
            <summary>
            Default WaveForeground color.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.WaveForegroundProperty">
            <summary>
            Identifies the WaveForeground dependency property. 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.ForegroundProperty">
            <summary>
            Identifies the Foreground dependency property. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.Foreground">
            <summary>
            Gets or sets the Foreground brush for the logo text.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.WaveForeground">
            <summary>
            Gets or sets the WaveForeground brush for the vector image.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.ResetColors">
            <summary>
            Resets the image's component colors to their default values.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.KeysightLogoImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TertiaryWaveformMeasurementVectorImageBase">
            <summary>
            Base class for vector images used to display different types of waveform measurements with three waveforms.  These images
            all have an annotation component, a waveform, a secondary waveform and a tertiary waveform component.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TertiaryWaveformMeasurementVectorImageBase.DefaultTertiaryWaveformColor">
            <summary>
            Default secondary waveform color.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TertiaryWaveformMeasurementVectorImageBase.TertiaryWaveformBrushProperty">
            <summary>
            Identifies the TertiaryWaveformBrush dependency property. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TertiaryWaveformMeasurementVectorImageBase.TertiaryWaveformBrush">
            <summary>
            Gets or sets the tertiary waveform's brush for the vector image. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TertiaryWaveformMeasurementVectorImageBase.ResetColors">
            <summary>
            Resets the image's component colors to their default values.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigCommNTriggerImage">
            <summary>
            Interaction logic for TrigCommNTriggerImage.xaml.
            </summary>
            <summary>
            TrigCommNTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigCommNTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigCommNTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigCommNTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigCommPTriggerImage">
            <summary>
            Interaction logic for TrigCommPTriggerImage.xaml.
            </summary>
            <summary>
            TrigCommPTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigCommPTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigCommPTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigCommPTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigDelayEventTriggerImage">
            <summary>
            Interaction logic for TrigDelayEventTriggerImage.xaml
            </summary>
            <summary>
            TrigDelayEventTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigDelayEventTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigDelayEventTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigDelayEventTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigDelayTriggerImage">
            <summary>
            Interaction logic for TrigDelayTriggerImage.xaml.
            </summary>
            <summary>
            TrigDelayTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigDelayTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigDelayTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigDelayTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeETriggerImage">
            <summary>
            Interaction logic for TrigEdgeETriggerImage.xaml.
            </summary>
            <summary>
            TrigEdgeETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigEdgeETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeFTriggerImage">
            <summary>
            Interaction logic for TrigEdgeFTriggerImage.xaml.
            </summary>
            <summary>
            TrigEdgeFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigEdgeFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeRTriggerImage">
            <summary>
            Interaction logic for TrigEdgeRTriggerImage.xaml.
            </summary>
            <summary>
            TrigEdgeRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigEdgeRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigEdgeRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndETriggerImage">
            <summary>
            Interaction logic for TrigPatternAndETriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternAndETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternAndETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndFTriggerImage">
            <summary>
            Interaction logic for TrigPatternAndFTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternAndFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternAndFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternEnterTriggerImage">
            <summary>
            Interaction logic for TrigPatternEnterTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternEnterTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternEnterTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternAndRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternEnterTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndRTriggerImage">
            <summary>
            Interaction logic for TrigPatternAndRTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternAndRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternAndRTriggerImage0.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternAndRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternExitTriggerImage">
            <summary>
            Interaction logic for TrigPatternExitTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternExitTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternExitTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternExitTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternExitTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternGtExitTriggerImage">
            <summary>
            Interaction logic for TrigPatternGtExitTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternGtExitTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternGtExitTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternGTExitTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternGtExitTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternGtTimeoutTriggerImage">
            <summary>
            Interaction logic for TrigPatternGtTimeoutTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternGtTimeoutTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternGtTimeoutTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternGtTimeoutTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternGtTimeoutTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternLtTriggerImage">
            <summary>
            Interaction logic for TrigPatternLtTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternLtTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternLtTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternLtTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternLtTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandETriggerImage">
            <summary>
            Interaction logic for TrigPatternNandETriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternNandETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternNandETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandFTriggerImage">
            <summary>
            Interaction logic for TrigPatternNandFTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternNandFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternNandFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandRTriggerImage">
            <summary>
            Interaction logic for TrigPatternNandRTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternNandRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternNandRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternNandRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternRangeTriggerImage">
            <summary>
            Interaction logic for TrigPatternRangeTriggerImage.xaml.
            </summary>
            <summary>
            TrigPatternRangeTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternRangeTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPatternRangeTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPatternRangeTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwGtNTriggerImage">
            <summary>
            Interaction logic for TrigPwGtNTriggerImage.xaml.
            </summary>
            <summary>
            TrigPwGtNTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwGtNTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPwGtNTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwGtNTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwGtPTriggerImage">
            <summary>
            Interaction logic for TrigPwGtPTriggerImage.xaml.
            </summary>
            <summary>
            TrigPwGtPTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwGtPTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPwGtPTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwGtPTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwLtNTriggerImage">
            <summary>
            Interaction logic for TrigPwLtNTriggerImage.xaml.
            </summary>
            <summary>
            TrigPwLtNTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwLtNTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPwLtNTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwLtNTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwLtPTriggerImage">
            <summary>
            Interaction logic for TrigPwLtPTriggerImage.xaml.
            </summary>
            <summary>
            TrigPwLtPTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwLtPTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigPwLtPTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigPwLtPTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntETriggerImage">
            <summary>
            Interaction logic for TrigRuntETriggerImage.xaml.
            </summary>
            <summary>
            TrigRuntETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigRuntETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntNTriggerImage">
            <summary>
            Interaction logic for TrigRuntNTriggerImage.xaml.
            </summary>
            <summary>
            TrigRuntNTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntNTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigRuntNTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntNTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntPTriggerImage">
            <summary>
            Interaction logic for TrigRuntPTriggerImage.xaml.
            </summary>
            <summary>
            TrigRuntPTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntPTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigRuntPTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigRuntPTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldETriggerImage">
            <summary>
            Interaction logic for TrigSahHoldETriggerImage.xaml.
            </summary>
            <summary>
            TrigSahHoldETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahHoldETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldFTriggerImage">
            <summary>
            Interaction logic for TrigSahHoldFTriggerImage.xaml.
            </summary>
            <summary>
            TrigSahHoldFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahHoldFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldRTriggerImage">
            <summary>
            Interaction logic for TrigSahHoldRTriggerImage.xaml.
            </summary>
            <summary>
            TrigSahHoldRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahHoldRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahHoldRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupETriggerImage">
            <summary>
            Interaction logic for TrigSahSetupETriggerImage.xaml.
            </summary>
            <summary>
            TrigSahSetupETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahSetupETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupFTriggerImage">
            <summary>
            Interaction logic for TrigSahSetupFTriggerImage.xaml.
            </summary>
            <summary>
            TrigSahSetupFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahSetupFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldETriggerImage">
            <summary>
            Interaction logic for TrigSahSetupHoldETriggerImage.xaml.
            </summary>
            <summary>
            TrigSahSetupHoldETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahSetupHoldETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldFTriggerImage">
            <summary>
            Interaction logic for TrigSahSetupHoldFTriggerImage.xaml.
            </summary>
            <summary>
            TrigSahSetupHoldFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahSetupHoldFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldRTriggerImage">
            <summary>
            Interaction logic for TrigSahSetupHoldRTriggerImage.xaml.
            </summary>
            <summary>
            TrigSahSetupHoldRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahSetupHoldRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupHoldRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupRTriggerImage">
            <summary>
            Interaction logic for TrigSahSetupRTriggerImage.xaml.
            </summary>
            <summary>
            TrigSahSetupRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSahSetupRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSahSetupRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSerialTriggerImage">
            <summary>
            Interaction logic for TrigSerialTriggerImage.xaml.
            </summary>
            <summary>
            TrigSerialTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSerialTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSerialTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSerialTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwMeasLimitTriggerImage">
            <summary>
            Interaction logic for TrigSwMeasLimitTriggerImage.xaml.
            </summary>
            <summary>
            TrigSwMeasLimitTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwMeasLimitTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSwMeasLimitTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwMeasLimitTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicETriggerImage">
            <summary>
            Interaction logic for TrigSwNonMonotonicETriggerImage.xaml.
            </summary>
            <summary>
            TrigSwNonMonotonicETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSwNonmonotonicETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicFTriggerImage">
            <summary>
            Interaction logic for TrigSwNonMonotonicFTriggerImage.xaml.
            </summary>
            <summary>
            TrigSwNonMonotonicFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSwNonmonotonicFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicRTriggerImage">
            <summary>
            Interaction logic for TrigSwNonMonotonicRTriggerImage.xaml.
            </summary>
            <summary>
            TrigSwNonMonotonicRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigSwNonmonotonicRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwNonMonotonicRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwZoneTriggerImage">
            <summary>
            Interaction logic for TrigSwZoneTriggerImage.xaml
            </summary>
            <summary>
            TrigSwZoneTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwZoneTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigswZoneTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigSwZoneTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutETriggerImage">
            <summary>
            Interaction logic for TrigTimeoutETriggerImage.xaml.
            </summary>
            <summary>
            TrigTimeoutETriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutETriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTimeoutETriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutETriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutHTriggerImage">
            <summary>
            Interaction logic for TrigTimeoutHTriggerImage.xaml.
            </summary>
            <summary>
            TrigTimeoutHTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutHTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTimeoutHTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutHTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutLTriggerImage">
            <summary>
            Interaction logic for TrigTimeoutLTriggerImage.xaml.
            </summary>
            <summary>
            TrigTimeoutLTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutLTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTimeoutLTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTimeoutLTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransGtFTriggerImage">
            <summary>
            Interaction logic for TrigTransGtFTriggerImage.xaml.
            </summary>
            <summary>
            TrigTransGtFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransGtFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTransGtFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransGtFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransGtRTriggerImage">
            <summary>
            Interaction logic for TrigTransGtRTriggerImage.xaml.
            </summary>
            <summary>
            TrigTransGtRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransGtRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTransGtRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransGtRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransLtFTriggerImage">
            <summary>
            Interaction logic for TrigTransLtFTriggerImage.xaml.
            </summary>
            <summary>
            TrigTransLtFTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransLtFTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTransLtFTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransLtFTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransLtRTriggerImage">
            <summary>
            Interaction logic for TrigTransLtRTriggerImage.xaml.
            </summary>
            <summary>
            TrigTransLtRTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransLtRTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTransLtRTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTransLtRTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTVSyncNTriggerImage">
            <summary>
            Interaction logic for TrigTVSyncNTriggerImage.xaml.
            </summary>
            <summary>
            TrigTVSyncNTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTVSyncNTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTVSyncNTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTVSyncNTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTVSyncPTriggerImage">
            <summary>
            Interaction logic for TrigTVSyncPTriggerImage.xaml.
            </summary>
            <summary>
            TrigTVSyncPTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTVSyncPTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigTVSyncPTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigTVSyncPTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowEnterTriggerImage">
            <summary>
            Interaction logic for TrigWindowEnterTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowEnterTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowEnterTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowEnterTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowEnterTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowExitTriggerImage">
            <summary>
            Interaction logic for TrigWindowExitTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowExitTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowExitTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowExitTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowExitTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideLtTriggerImage">
            <summary>
            Interaction logic for TrigWindowInsideLtTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowInsideLtTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideLtTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowInsideLtTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideLtTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideQtExitTriggerImage">
            <summary>
            Interaction logic for TrigWindowInsideQtExitTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowInsideQtExitTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideQtExitTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowInsideQtExitTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideQtExitTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideQtTimeoutTriggerImage">
            <summary>
            Interaction logic for TrigWindowInsideQtTimeoutTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowInsideQtTimeoutTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideQtTimeoutTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowInsideQtTimeoutTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowInsideQtTimeoutTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideLtTriggerImage">
            <summary>
            Interaction logic for TrigWindowOutsideLtTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowOutsideLtTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideLtTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowOutsideLtTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideLtTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideQtEnterTriggerImage">
            <summary>
            Interaction logic for TrigWindowOutsideQtEnterTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowOutsideQtEnterTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideQtEnterTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowOutsideQtEnterTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideQtEnterTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideQtTimeoutTriggerImage">
            <summary>
            Interaction logic for TrigWindowOutsideQtTimeoutTriggerImage.xaml.
            </summary>
            <summary>
            TrigWindowOutsideQtTimeoutTriggerImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideQtTimeoutTriggerImage.#ctor">
            <summary>
            Creates a new instance of the TrigWindowOutsideQtTimeoutTriggerImage.xaml object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TrigWindowOutsideQtTimeoutTriggerImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.AreaMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            AreaMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.AreaMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the AreaMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.AreaMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstIntervalMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            BurstIntervalMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstIntervalMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the BurstIntervalMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstIntervalMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstPeriodMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            BurstPeriodMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstPeriodMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the BurstPeriodMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstPeriodMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstWidthMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            BurstWidthMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstWidthMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the BurstWidthMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.BurstWidthMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CrossingVoltageMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            CrossingVoltageMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CrossingVoltageMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the CrossingVoltageMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CrossingVoltageMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DeemphasisMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            DeemphasisMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DeemphasisMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the DeemphasisMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DeemphasisMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DdpwsMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            DdpwsMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DdpwsMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the DdpwsMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DdpwsMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EdgeTimeMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            EdgeTimeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EdgeTimeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the EdgeTimeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EdgeTimeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftDeltaMagnitudeMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            FftDeltaMagnitudeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftDeltaMagnitudeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the FftDeltaMagnitudeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftDeltaMagnitudeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeEitherMeasurementImage">
            <summary>
            Interaction logic for HoldTimeEitherMeasurementImage.xaml
            </summary>
            <summary>
            HoldTimeEitherMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeEitherMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the HoldTimeEitherMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeEitherMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeFallingMeasurementImage">
            <summary>
            Interaction logic for HoldTimeFallingMeasurementImage.xaml
            </summary>
            <summary>
            HoldTimeFallingMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeFallingMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the HoldTimeFallingMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeFallingMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NCycleJitterMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            NCycleJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NCycleJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the NCycleJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NCycleJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NegativePulseCountMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            NegativePulseCountMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NegativePulseCountMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the NegativePulseCountMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NegativePulseCountMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NPeriodJitterMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            NPeriodJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NPeriodJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the NPeriodJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NPeriodJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NUIJitterMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            NUIJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NUIJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the NUIJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NUIJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PositivePulseCountMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            PositivePulseCountMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PositivePulseCountMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the PositivePulseCountMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PositivePulseCountMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeEitherMeasurementImage">
            <summary>
            Interaction logic for SetupTimeEitherMeasurementImage.xaml
            </summary>
            <summary>
            SetupTimeEitherMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeEitherMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the SetupTimeEitherMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeEitherMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeFallingMeasurementImage">
            <summary>
            Interaction logic for SetupTimeFallingMeasurementImage.xaml
            </summary>
            <summary>
            SetupTimeFallingMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeFallingMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the SetupTimeFallingMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeFallingMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SlewRateMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            SlewRateMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SlewRateMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the SlewRateMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SlewRateMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TVoltMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            TVoltMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TVoltMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the TVoltMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TVoltMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.UIJitterMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            UIJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.UIJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the UIJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.UIJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleJitterMeasurementImage">
            <summary>
            Interaction logic for CycleJitterMeasurementImage.xaml
            </summary>
            <summary>
            CycleJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the CycleJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleDutyMeasurementImage">
            <summary>
            Interaction logic for CycleToCycleDutyMeasurementImage.xaml
            </summary>
            <summary>
            CycleToCycleDutyMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleDutyMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the CycleToCycleDutyMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleDutyMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleJitterMeasurementImage">
            <summary>
            Interaction logic for CycleToCycleJitterMeasurementImage.xaml
            </summary>
            <summary>
            CycleToCycleJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the CycleToCycleJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleNegativePulseWidthMeasurementImage">
            <summary>
            Interaction logic for CycleToCycleNegativePulseWidthMeasurementImage.xaml
            </summary>
            <summary>
            CycleToCycleNegativePulseWidthMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleNegativePulseWidthMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the CycleToCycleNegativePulseWidthMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCycleNegativePulseWidthMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCyclePulseWidthMeasurementImage">
            <summary>
            Interaction logic for CycleToCyclePulseWidthMeasurementImage.xaml
            </summary>
            <summary>
            CycleToCyclePulseWidthMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCyclePulseWidthMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the CycleToCyclePulseWidthMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.CycleToCyclePulseWidthMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DataFrequencyMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            DataFrequencyMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DataFrequencyMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the DataFrequencyMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DataFrequencyMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DataPeriodMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            DataPeriodMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DataPeriodMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the DataPeriodMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DataPeriodMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DeltaTimeMeasurementImage">
            <summary>
            Interaction logic for DeltaTimeMeasurementImage.xaml
            </summary>
            <summary>
            DeltaTimeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DeltaTimeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the DeltaTimeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DeltaTimeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DualWaveformMeasurementVectorImageBase">
            <summary>
            Base class for vector images used to display different types of waveform measurements with two waveforms.  These images
            all have an annotation component, a waveform and a secondary waveform component.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DualWaveformMeasurementVectorImageBase.DefaultSecondaryWaveformColor">
            <summary>
            Default secondary waveform color.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DualWaveformMeasurementVectorImageBase.SecondaryWaveformBrushProperty">
            <summary>
            Identifies the WaveformBrush dependency property. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DualWaveformMeasurementVectorImageBase.SecondaryWaveformBrush">
            <summary>
            Gets or sets the secondary waveform's brush for the vector image. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DualWaveformMeasurementVectorImageBase.ResetColors">
            <summary>
            Resets the image's component colors to their default values.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DutyCycleMeasurementImage">
            <summary>
            Interaction logic for DutyCycleMeasurementImage.xaml
            </summary>
            <summary>
            DutyCycleMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DutyCycleMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the DutyCycleMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.DutyCycleMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeCrossingMeasurementImage">
            <summary>
            Interaction logic for EyeCrossingAmplitudeMeasurementImage.xaml
            </summary>
            <summary>
            EyeCrossingMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeCrossingMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the EyeCrossingMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeCrossingMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeDutyCycleDistortionMeasurementImage">
            <summary>
            Interaction logic for EyeDutyCycleDistortionMeasurementImage.xaml
            </summary>
            <summary>
            EyeDutyCycleDistortionMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeDutyCycleDistortionMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the EyeDutyCycleDistortionMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeDutyCycleDistortionMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeHeightMeasurementImage">
            <summary>
            Interaction logic for EyeHeightMeasurementImage.xaml
            </summary>
            <summary>
            EyeHeightMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeHeightMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the EyeHeightMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeHeightMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeJitterMeasurementImage">
            <summary>
            Interaction logic for EyeJitterMeasurementImage.xaml
            </summary>
            <summary>
            EyeJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the EyeJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeQFactorMeasurementImage">
            <summary>
            Interaction logic for EyeQFactorMeasurementImage.xaml
            </summary>
            <summary>
            EyeQFactorMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeQFactorMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the EyeQFactorMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeQFactorMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeWidthMeasurementImage">
            <summary>
            Interaction logic for EyeWidthMeasurementImage.xaml
            </summary>
            <summary>
            EyeWidthMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeWidthMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the EyeWidthMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.EyeWidthMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FallTimeMeasurementImage">
            <summary>
            Interaction logic for FallTimeMeasurementImage.xaml
            </summary>
            <summary>
            FallTimeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FallTimeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the FrequencyMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FallTimeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftDeltaFrequencyMeasurementImage">
            <summary>
            Interaction logic for FftDeltaFrequencyMeasurementImage.xaml
            </summary>
            <summary>
            FftDeltaFrequencyMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftDeltaFrequencyMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the FftDeltaFrequencyMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftDeltaFrequencyMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftFrequencyMeasurementImage">
            <summary>
            Interaction logic for FftFrequencyMeasurementImage.xaml
            </summary>
            <summary>
            FftFrequencyMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftFrequencyMeasurementImage.#ctor">
            Creates a new instance of the FftFrequencyMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftFrequencyMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftMagnitudeMeasurementImage">
            <summary>
            Interaction logic for FftMagnitude.xaml
            </summary>
            <summary>
            FftMagnitudeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftMagnitudeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the FftMagnitudeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FftMagnitudeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FrequencyMeasurementImage">
            <summary>
            Interaction logic for FrequencyMeasurementImage.xaml
            </summary>
            <summary>
            FrequencyMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FrequencyMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the FrequencyMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.FrequencyMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HighTimeMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            HighTimeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HighTimeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the HighTimeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HighTimeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeRisingMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            HoldTimeRisingMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeRisingMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the HoldTimeRisingMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.HoldTimeRisingMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.LowTimeMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            LowTimeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.LowTimeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the LowTimeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.LowTimeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NCycleToCycleJitterMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            NCycleToCycleJitterMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NCycleToCycleJitterMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the NCycleToCycleJitterMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NCycleToCycleJitterMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NegativePulseWidthMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            NegativePulseWidthMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NegativePulseWidthMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the NegativePulseWidthMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.NegativePulseWidthMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.OvershootMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            OvershootMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.OvershootMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the OvershootMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.OvershootMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PeriodMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            PeriodMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PeriodMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the PeriodMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PeriodMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PhaseMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            PhaseMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PhaseMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the PhaseMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PhaseMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PositiveRuntMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            PositiveRuntMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PositiveRuntMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the PositiveRuntMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PositiveRuntMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PreshootMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            PreshootMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PreshootMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the PreshootMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PreshootMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PulseWidthMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            PulseWidthMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PulseWidthMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the PulseWidthMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.PulseWidthMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.RiseTimeMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            RiseTimeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.RiseTimeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the RiseTimeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.RiseTimeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeRisingMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            SetupTimeRisingMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeRisingMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the SetupTimeRisingMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SetupTimeRisingMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SkewMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            SkewMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SkewMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the SkewMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.SkewMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeIntervalErrorClockMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            TimeIntervalErrorClockMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeIntervalErrorClockMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the TimeIntervalErrorClockMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeIntervalErrorClockMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeIntervalErrorDataMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            TimeIntervalErrorDataMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeIntervalErrorDataMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the TimeIntervalErrorDataMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeIntervalErrorDataMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeMaxMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            TimeMaxMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeMaxMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the TimeMaxMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeMaxMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeMinMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            TimeMinMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeMinMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the TimeMinMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.TimeMinMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VectorImageBase">
            <summary>
            Base class for vector images. These images all have a background color component.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VectorImageBase.ImageName">
            <summary>
            Gets the name of the type associated with this image.  Used for data binding the image name in an image viewer.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VectorImageBase.ResetColors">
            <summary>
            Resets the image's component colors to their default values.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageACRmsMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageACRmsMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageACRmsMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageACRmsMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageACRmsMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageAmplitudeMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageAmplitudeMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageAmplitudeMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageAmplitudeMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageAmplitudeMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageAverageMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageAverageMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageAverageMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageAverageMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageAverageMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageBaseMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageBaseMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageBaseMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageBaseMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageBaseMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageDCRmsMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageDCRmsMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageDCRmsMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageDCRmsMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageDCRmsMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageLowerMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageLowerMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageLowerMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageLowerMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageLowerMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMaxMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageMaxMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMaxMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageMaxMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMaxMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMiddleMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageMiddleMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMiddleMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageMiddleMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMiddleMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMinMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageMinMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMinMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageMinMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageMinMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltagePeakToPeakMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltagePeakToPeakMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltagePeakToPeakMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltagePeakToPeakMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltagePeakToPeakMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageTopMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageTopMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageTopMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageTopMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageTopMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageUpperMeasurementImage">
            <summary>
            Interaction logic for .xaml
            </summary>
            <summary>
            VoltageUpperMeasurementImage
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageUpperMeasurementImage.#ctor">
            <summary>
            Creates a new instance of the VoltageUpperMeasurementImage object.  This Image derived type provides properties
            for modifying the colors of various parts of the image at runtime.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.VoltageUpperMeasurementImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase">
            <summary>
            Base class for vector images used to display different types of waveform measurements.  These images
            all have a annotation component and a waveform component.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.DefaultBackgroundColor">
            <summary>
            Default background color.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.DefaultAnnotationColor">
            <summary>
            Default annotation color.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.DefaultWaveformColor">
            <summary>
            Default waveform color.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.BackgroundProperty">
            <summary>
            Identifies the Background dependency property. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.Background">
            <summary>
            Gets or sets the background brush for the vector image.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.AnnotationBrushProperty">
            <summary>
            Identifies the AnnotationBrush dependency property. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.AnnotationBrush">
            <summary>
            Gets or sets the annotation brush for the vector image.  
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.WaveformBrushProperty">
            <summary>
            Identifies the WaveformBrush dependency property. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.WaveformBrush">
            <summary>
            Gets or sets the waveform brush for the vector image.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.DynamicVectorImages.WaveformMeasurementVectorImageBase.ResetColors">
            <summary>
            Resets the image's component colors to their default values.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Controls.FontSettingsUserControl">
            <summary>
            Interaction logic for FontSettingsUserControl.xaml
            </summary>
            <summary>
            FontSettingsUserControl
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.FontSettingsUserControl.IsDefaultFontFamily">
            <summary>
            
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.FontSettingsUserControl.WslFontSize">
            <summary>
            Gets or sets the font size for the currently selected font type.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.FontSettingsUserControl.IsDefaultFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.FontSettingsUserControl.IsDefaultFontStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.FontSettingsUserControl.IsDefaultFontWeight">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Controls.FontSettingsUserControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Controls.ResetButton.IsDefaultValueSet">
            <summary>
            Gets or sets a flag indicating if the associated value is set to its default value.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslRgbConverter">
            <summary>
            Converter class that returns a Color type given 3 RGB values
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Converters.WslRgbConverter.Instance">
            <summary>
            Static initalizer variable
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslRgbConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Given 3 RGB values return a color
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslRgbConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Implemented
            </summary>
            <param name="value"></param>
            <param name="targetTypes"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslBooleanToVisibilityConverter">
            <summary>
            Converts Boolean Values to Control.Visibility values
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Converters.WslBooleanToVisibilityConverter.Instance">
            <summary>
            Static initalizer variable
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Converters.WslBooleanToVisibilityConverter.TriggerValue">
            <summary>
            Set to true if you want to show control when boolean value is true
            Set to false if you want to hide/collapse control when value is true
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Converters.WslBooleanToVisibilityConverter.IsHidden">
            <summary>
            Set to true if you just want to hide the control
             else set to false if you want to collapse the control
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslBooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a boolean to a Control.Visibility value
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslBooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented to go from Control.Visibility to Boolean
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslBooleanToVisibilityConverter.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns the converter
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslStringToVisibilityConverter">
            <summary>
            Convert given string visibility value
            </summary>
            <remarks>
            By default when a string is empty return Visibility.Collapsed, otherwise return Visibility.Visible.
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslStringToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Keysight.Ccl.Wsl.UI.Converters.WslStringToVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Converters.WslStringToVisibilityConverter.EmptyTreatment">
            <summary>
            Gets or sets the Visibility value when string is null or empty
            </summary>
            <value>
            The empty treatment.
            </value>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Converters.WslStringToVisibilityConverter.NonEmptyTreatment">
            <summary>
            Gets or sets the Visibility value when string is not null or empty
            </summary>
            <value>
            The non empty treatment.
            </value>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslStringToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslStringToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslUniversalValueConverter">
            <summary>
            Converter class that converts from a value to a target if it is possible
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslUniversalValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            If possible this convert method will convert the value to the targettype
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslUniversalValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslMultiIsGreaterThanConverter">
            <summary>
            Simple converter to compare if one value is greater than another
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslMultiIsGreaterThanConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Method to compare if one value is greater than another
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslMultiIsGreaterThanConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Method to compare the reverse. Not currently implemented
            </summary>
            <param name="value"></param>
            <param name="targetTypes"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter">
            <summary>
            Provides a type converter for enum values that converts enum values to and from string representations 
            using localized resources.
            </summary>
            <remarks>
            This class makes localization of display values for enums in a project easy. First, derive a class from 
            this class and pass the typeof the corresponding enum and the ResourceManager to the constructor.  
            
            <code lang="C#" escaped="true" >
            public enum MyEnum { Field1, Field2, Field3 }
            
            public class MyEnumConverter : ResourceEnumConverter
            {
               public MyEnumConverter()
                   : base(typeof(MyEnum), Properties.Resources.ResourceManager)
               {
               }
            }    
            </code>
            
            Second, define the enum values in the resource editor.   The names of
            the resources are simply the enum value prefixed by the enum type name with an
            underscore separator eg MyEnum_Field1.  You can then use the TypeConverter attribute
            to make the MyEnumConverter the default TypeConverter for the MyEnum enum in your
            project.
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.#ctor(System.Type,System.Resources.ResourceManager)">
             <summary>
            Creates a new instance of the WslResourceEnumConverter class. 
             </summary>
             <param name="type">The type of the enum that the converter translates for.</param>
             <param name="resourceManager">The ResourceManager that contains the string resources for the enum's fields.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert. </param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.ConvertToString(System.Enum)">
            <summary>
            Converts the given enum value to string using the registered type converter.
            </summary>
            <param name="value">The enum value to convert to string</param>
            <returns>The localized string value for the enum</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.GetResourceName(System.Object)">
            <summary>
            Return the name of the resource to use.
            </summary>
            <param name="value">The value to get</param>
            <returns>The name of the resource to use</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use. Not used.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use. Not used.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.GetLookupTable(System.Globalization.CultureInfo)">
            <summary>
            Get the lookup table for the given culture (creating if necessary)
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.GetValueText(System.Globalization.CultureInfo,System.Object)">
            <summary>
            Return the text to display for a simple value in the given culture
            </summary>
            <param name="culture"></param>
            <param name="value">The enum value to get the text for</param>
            <returns>The localized text</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.IsSingleBitValue(System.UInt64)">
            <summary>
            Return true if the given value is can be represented using a single bit
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.GetFlagValueText(System.Globalization.CultureInfo,System.Object)">
            <summary>
            Return the text to display for a flag value in the given culture
            </summary>
            <param name="culture"></param>        
            <param name="value">The flag enum value to get the text for</param>
            <returns>The localized text</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.GetValue(System.Globalization.CultureInfo,System.String)">
            <summary>
            Return the Enum value for a simple (non-flagged enum)
            </summary>
            <param name="culture">The culture to convert using</param>
            <param name="text">The text to convert</param>
            <returns>The enum value</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslResourceEnumConverter.GetFlagValue(System.Globalization.CultureInfo,System.String)">
            <summary>
            Return the Enum value for a flagged enum
            </summary>
            <param name="culture">The culture to convert using</param>
            <param name="text">The text to convert</param>
            <returns>The enum value</returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslBackgroundConverter">
            <summary>
            Converter class that creates the alternating row brush effect for ListViewItems.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslBackgroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Method that creates the alternating rows brush effect
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslBackgroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            The convertback method is not supported for this alternating rows effect. Calling this method will throw an exception
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslSkinSettingsConverter">
            <summary>
            Converts a skin level to a visibility value
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslSkinSettingsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Method that decides whether to turn on the SkinSettings
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslSkinSettingsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            The convertback method is not supported for this skin settings manager.  Calling this method will throw an exception
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Converters.WslDoubleToVisibilityConverter">
            <summary>
            Converts a range value (Double) to a Visibility enum
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslDoubleToVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the visibility value based on a delta distance being encroached between a range value and a trigger
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Converters.WslDoubleToVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            The convertback method is not supported for this visibility effect. Calling this method will throw an exception
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Interfaces.IShowHelp">
            <summary>   A wsl help. </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Interfaces.IShowHelp.ShowHelp(System.Object)">
            -------------------------------------------------------------------------------------------------
             <summary>   Shows the help. </summary>
             <remarks> This interface should be implemented by users wanting to handle help.  The resulting class should be assigned to the WslHelp.ShowProvider property</remarks>
             <param name="helpSpec"> Information describing the help. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.CultureManager">
            <summary>
            CultureManager provides events to notify subscribers when the culture and UI culture of a thread changes. In 
            order to support these notifications, all changes to a thread's culture and UI culture should be done using
            the CultureManager.  Directly setting Thread.CurrentThread.CurrentUICulture will not raise the CultureChanged event
            and subsequently subscribers like the DynamicResx markup extenion will not get notified when the UI culture
            changes.  CultureManager is a singleton type which can be accessed via the Instance static property.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.CultureManager.Instance">
            <summary>
            Gets the singleton CultureManager instance.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.CultureManager.CurrentUICulture">
            <summary>
            Sets the CurrentUICulture on the calling thread and raises the <see cref="E:Keysight.Ccl.Wsl.UI.Managers.CultureManager.CurrentUICultureChanged"/> event.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Managers.CultureManager.CurrentUICultureChanged">
            <summary>
            Raised when the CurrentUICulture property on this type is changed. You must keep a hard
            reference to the handler to avoid garbage collection and unexpected results. 
            See remarks for more information.
            </summary>
            <remarks>
            When you subscribe to this event using code, you will need to keep a hard reference to the 
            event handler. You do not need to do this when binding using XAML.  This is to prevent 
            garbage collection of the event handler: This event implements the Weak Event pattern, so it does not have
            a hard reference to this handler. 
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.CultureManager.CurrentCulture">
            <summary>
            Sets the CurrentCulture on the calling thread and raises the <see cref="E:Keysight.Ccl.Wsl.UI.Managers.CultureManager.CurrentCultureChanged"/> event.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Managers.CultureManager.CurrentCultureChanged">
            <summary>
            Raised when the CurrentCulture property on this type is changed. You must keep a hard
            reference to the handler to avoid garbage collection and unexpected results. 
            See remarks for more information.
            </summary>
            <remarks>
            When you subscribe to this event using code, you will need to keep a hard reference to the 
            event handler. You do not need to do this when binding using XAML.  This is to prevent 
            garbage collection of the event handler: This event implements the Weak Event pattern, so it does not have
            a hard reference to this handler. 
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.CultureManager.SynchronizeThreadCurrentCulture">
            <summary>
            Gets or sets a boolean value that if set to true, will synchronize the <see cref="P:System.Threading.Thread.CurrentCulture"/> value
            to track with the <see cref="P:Keysight.Ccl.Wsl.UI.Managers.CultureManager.CurrentUICulture"/> property value.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.CultureChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.CultureChangedEventArgs.#ctor(System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="newCulture"></param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.CultureChangedEventArgs.NewCulture">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Direction.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Direction.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.ScreenManager">
            <summary>
            A helper class for screen size related properties.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.PrimaryMonitorSize">
            <summary>
            The primary monitor size that is used to determine window sizing.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.LogicalToPhysicalPixels(System.IntPtr,System.Double,Keysight.Ccl.Wsl.UI.Managers.Direction)">
            <summary>
            Converts device-independent (logical) WPF pixels into device-dependent (physical) pixels for the specified monitor
            and its DPI scaling which this methd computes.  The method attempts to use the real, non-virtualized scale factor.
            </summary>
            <param name="windowHandle"></param>
            <param name="logicalPixelLength"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.PhysicalToLogicalPixels(System.IntPtr,System.Double,Keysight.Ccl.Wsl.UI.Managers.Direction)">
            <summary>
            Converts device-dependent (physical) WPF pixels into device-independent (logical) pixels for the specified monitor
            and its DPI scaling which this methd computes.  The method attempts to use the real, non-virtualized scale factor.
            </summary>
            <param name="windowHandle"></param>
            <param name="physicalPixelLength"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.AdjustWindowToFitIntoWorkingArea(System.Windows.Window)">
            <summary>
            Manipulates the specified window's bounding rectangle to fit inside the working area
            of the monitor the window is being displayed on.  This method takes into account the
            DPI scaling for the monitor as well.
            </summary>
            <param name="window"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.GetCustomDpiScaleFactor(System.Windows.Media.Visual)">
            <summary>
            Returns the scaling factor that is effectively applied to this window due to the
            user selecting a custom DPI setting for the Windows OS.  There are currently no
            scenarios that would allow/support different horizontal and vertical scaling factors,
            but, just to be safe, we return the larger of the two.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.VirtualDesktopRect">
            <summary>
            Defines the available desktop screen area (including multiple-monitor
            configurations) in pixels.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.DesktopWorkingArea">
            <summary>
            Defines the available desktop working area, usually the entire screen size.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.UpdateVirtualDesktopRect">
            <summary>
            Queries the system for the available desktop area and working area. The working area is the 
            desktop area minus any docked toolbars, such as the taskbar. The result of this call is that the 
            WslDialog public properties ScreenWorkingArea and DefaultMaxSize, and the GuiUtils.PrimaryMonitorSize property,
            are updated to match the current reality.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.LogicalToPhysicalPixels(Keysight.Ccl.Wsl.UI.NativeMethods.MONITORINFO,System.Double,Keysight.Ccl.Wsl.UI.Managers.Direction)">
            <summary>
            Converts device-independent (logical) WPF pixels into device-dependent (physical) pixels for the specified monitor
            and its DPI scaling which this methd computes.  The method attempts to use the real, non-virtualized scale factor.
            </summary>
            <param name="monitorInfo"></param>
            <param name="logicalPixelLength"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.PhysicalToLogicalPixels(Keysight.Ccl.Wsl.UI.NativeMethods.MONITORINFO,System.Double,Keysight.Ccl.Wsl.UI.Managers.Direction)">
            <summary>
            Converts device-dependent (physical) WPF pixels into device-independent (logical) pixels for the specified monitor
            and its DPI scaling which this methd computes.  The method attempts to use the real, non-virtualized scale factor.
            </summary>
            <param name="monitorInfo"></param>
            <param name="physicalPixelLength"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.GetVirtualDesktopRect">
            <summary>
            Returns a Rect describing the extends of the virtual desktop area (this area will 
            encompass multiple monitors).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.ScreenManager.GetDesktopWorkingArea">
            <summary>
            Returns a Rect describing the working area of this screen (this takes into account any
            toolbars, gadgets, etc, including the Windows start bar).
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.Platform">
            <summary>
            Enum that identifies platform version. Used to apply OS specific resource dictionaries.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.Unsupported">
            <summary>
            Indicates an unrecognized OS
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.Unknown">
            <summary>
            Indicates an unrecognized OS
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.XP">
            <summary>
            Identifier for the XP platform
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.Vista">
            <summary>
            Identifier for the Vista platform
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.Windows7">
            <summary>
            Identifier for the Windows 7 platform
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.Windows8">
            <summary>
            Identifier for the Windows 8 platform
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.Windows8Dot1">
            <summary>
            Identifier for the Windows 8.1 platform
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.Platform.Windows10">
            <summary>
            Identifier for the Windows 10 platform
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.FontManager">
            <summary>
            FontManager is responsible for managing the aspects of fonts (family, size, style etc.) that are
            consistent with the Keysight software standards.  FontManager is a singleton type.  You must
            call the InstallFontResources method in order to use the FontManager.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Managers.FontManager.PropertyChanged">
            <summary>
            Event raised when a property has changed.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.Instance">
            <summary>
            Gets the singleton FontManager instance.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.UseSystemFonts">
            <summary>
            Gets or sets a flag indicating whether the FontManager should fallback to 
            using the default System fonts.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslBrandedElementFontFamilyKey">
            <summary>
            Gets the WSL branded element font family key.  This is the Keysight condensed font.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMonospacedFontFamilyKey">
            <summary>
            Gets the WSL monospaced font family key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontFamilyKey">
            <summary>
            Gets the WSL caption font family key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontSizeKey">
            <summary>
            Gets the WSL caption font size key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontWeightKey">
            <summary>
            Gets the WSL caption font weight key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontStyleKey">
            <summary>
            Gets the WSL caption font style key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontFamilyKey">
            <summary>
            Gets the WSL small caption font family key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontSizeKey">
            <summary>
            Gets the WSL small caption font size key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontWeightKey">
            <summary>
            Gets the WSL small caption font weight key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontStyleKey">
            <summary>
            Gets the WSL small caption font style key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontFamilyKey">
            <summary>
            Gets the WSL messsage font family key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontSizeKey">
            <summary>
            Gets the WSL message font size key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontWeightKey">
            <summary>
            Gets the WSL message font weight key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontStyleKey">
            <summary>
            Gets the WSL message font style key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontFamilyKey">
            <summary>
            Gets the WSL menu font family key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontSizeKey">
            <summary>
            Gets the WSL menu font size key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontWeightKey">
            <summary>
            Gets the WSL menu font weight key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontStyleKey">
            <summary>
            Gets the WSL menu font style key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontFamilyKey">
            <summary>
            Gets the WSL status font family key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontSizeKey">
            <summary>
            Gets the WSL status font size key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontWeightKey">
            <summary>
            Gets the WSL status font weight key.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontStyleKey">
            <summary>
            Gets the WSL status font style key.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontFamily">
            <summary>
            Gets the WSL Caption FontFamily. Setting the value to null will reset the font to its default value.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontSize">
            <summary>
            Gets the WSL Caption FontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontStyle">
            <summary>
            Gets the WSL Caption FontStyle.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslCaptionFontWeight">
            <summary>
            Gets the WSL Caption FontWeight.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontFamily">
            <summary>
            Gets the WSL Small Caption FontFamily. Setting the value to null will reset the font to its default value.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontSize">
            <summary>
            Gets the WSL Small Caption FontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontStyle">
            <summary>
            Gets the WSL Small Caption FontStyle.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslSmallCaptionFontWeight">
            <summary>
            Gets the WSL Small Caption FontWeight.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontFamily">
            <summary>
            Gets the WSL Menu FontFamily. Setting the value to null will reset the font to its default value.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontSize">
            <summary>
            Gets the WSL Menu FontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontStyle">
            <summary>
            Gets the WSL Menu FontStyle.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMenuFontWeight">
            <summary>
            Gets the WSL Menu FontWeight.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontFamily">
            <summary>
            Gets or sets the WSL Message FontFamily. Setting the value to null will reset the font to its default value.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontSize">
            <summary>
            Gets or sets the WSL Message FontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontStyle">
            <summary>
            Gets or sets the WSL Message FontStyle.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslMessageFontWeight">
            <summary>
            Gets or sets the WSL Message FontWeight.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontFamily">
            <summary>
            Gets the WSL Status FontFamily. Setting the value to null will reset the font to its default value.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontSize">
            <summary>
            Gets the WSL Status FontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontStyle">
            <summary>
            Gets the WSL Status FontStyle.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.WslStatusFontWeight">
            <summary>
            Gets the WSL Status FontWeight.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.ApprovedMonospacedFontFamilyNames">
            <summary>
            Gets the list of approved monospaced FontFamily names for Keysight applications.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.ApprovedProportionalFontFamilyNames">
            <summary>
            Gets the list of approved proportional FontFamily names for Keysight applications.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultMonospacedFontFamily">
            <summary>
            Gets the default monospaced FontFamily.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.MonospacedFontFamily">
            <summary>
            Gets or sets the monospaced FontFamily used by the application.
            Setting this property to null will restore it to its default value.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslFontFamily">
            <summary>
            Gets the default WslFontFamily.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslCaptionFontSize">
            <summary>
            Gets the default WslCaptionFontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslSmallCaptionFontSize">
            <summary>
            Gets the default WslSmallCaptionFontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslMenuFontSize">
            <summary>
            Gets the default WslMenuFontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslMessageFontSize">
            <summary>
            Gets the default WslMessageFontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslStatusFontSize">
            <summary>
            Gets the default WslStatusFontSize.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslFontStyle">
            <summary>
            Gets the FontStyle for the proportional font.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.FontManager.DefaultWslFontWeight">
            <summary>
            Gets the FontWeight for the proportional font.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.FontManager.InstallFontResources">
            <summary>
            Installs the necessary font resources into the application's ResourceDictionary.
            Unless you manually add the font keys and values to your application's ResourceDictionary
            the FontManager will not be able to update font sizes or provide values for the
            FontFamily types that should be used by Keysight applications.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.FontManager.SetFontValue``1(``0@,``0,``0,System.String)">
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.HelpManager">
            <summary> A wsl help. </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.HelpManager.IsRoutingHelpEnabledProperty">
            Using a DependencyProperty as the backing store for IsRoutingHelpEnabled. This enables animation, styling, binding, etc...
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.HelpManager.IsTunnelingEnabledProperty">
            Using a DependencyProperty as the backing store for IsTunnelingEnabled. This enables animation, styling, binding, etc...
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.HelpManager.IsBubblingEnabledProperty">
            Using a DependencyProperty as the backing store for IsBubblingEnabled. This enables animation, styling, binding, etc...
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.HelpManager.HelpLinkProperty">
            <summary>
            The ineritable Attached property that enables any FrameworkElement to look up (bubbling) the visual tree and find a parent Help Link to use as the source of its help
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.HelpManager.GetHelpLink(System.Windows.DependencyObject)">
            -------------------------------------------------------------------------------------------------
             <summary> Gets bubbling help link. Look up the visual tree for a parent who sets this property and use it. </summary>
            
             <param name = "obj" > The Help Link object </param>
            
             <returns> The help link value. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.HelpManager.SetHelpLink(System.Windows.DependencyObject,System.Object)">
            -------------------------------------------------------------------------------------------------
             <summary> Sets bubbling help link. Set it here so that some visual tree child will come up looking for it and use it. </summary>
            
             <param name = "obj" > The Help Link object. </param>
             <param name = "value" > The Help Link value can be any object. THe default HelpProvider adapter knows how to parse .chm and .pdf formats as well as launch arbitrary OS file extensions. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.HelpManager.IsRoutingHelpEnabled">
            <summary>
            Dependency property to enable or disable routed help behavior
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.HelpManager.IsTunnelingEnabled">
            <summary>
            Dependency property to enable or disable tunneling (walking down the visual tree) behavior
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.HelpManager.IsBubblingEnabled">
            <summary>
            Dependency property to enable or disable bubbling (walking up the visual tree) behavior
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.HelpManager.Instance">
            <summary>
            Static accessor to the instance of the SkinManager
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.HelpManager.HelpProvider">
            -------------------------------------------------------------------------------------------------
             <summary> Gets or sets the help provider. </summary>
            
             <value> The help provider. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.PlatformManager">
            <summary>
            <para>Manages platform differences by applying OS-specific XAML resources.</para>
            <para>If the manager detects a certain Microfosoft Windows version it will automaticaly apply any Xaml that you have specified in an OS specific skin</para>
            <para> See the ExperimentalFeaturesSample sample app for an example of how to use the Platform manager</para>
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.PlatformManager.Instance">
            <summary>
            Static accessor to the instance of the PlatformManager.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.PlatformManager.PlatformLevel">
            <summary>
            Returns the major platform level (operating system) the application is currently running on. Can also *force* a simulation of a platform by setting a value for this property
            </summary>
            <returns>Vista, Windows7, or XP</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.PlatformManager.ApplyPlatformResources">
            <summary>
            Applies all the appropriate platform-specific resources to the live UI for the current operating system.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.PlatformManager.ClearPlatformResources">
            <summary>
            Removes any and all platform-specific resources from the live UI. NOTE: This does not remove the platform-specific resource dictionary from the database. You'll need to use the RemoveCustomPlatformDictionary API for that.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.PlatformManager.AddCustomPlatformDictionary(Keysight.Ccl.Wsl.UI.Managers.Platform,System.Windows.ResourceDictionary)">
            <summary>
            Adds an entry to the platform dictionary managed by the PlatformManager. This entry provides per-OS XAML resources.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.PlatformManager.RemoveCustomPlatformDictionary(Keysight.Ccl.Wsl.UI.Managers.Platform)">
            <summary>
            Removes an entry from the platform dictionary managed by the PlatformManager. These resources will no longer be applied even when running on the specified OS.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinCategoryPermutations">
            <summary>
            The various supported relationships that skins can have with categories
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategoryPermutations.None">
            <summary>
            Represents no relationship between this skin and this category
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategoryPermutations.OneOfN">
            <summary>
            Declares that the skin only gets one choice of a dependent skin of a mutually exclusive group but it has to have at least one at all times
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategoryPermutations.ZeroOrOne">
            <summary>
            Declares that the skin can optionally have none or at most one of the dependent skin type
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategoryPermutations.ZeroOrOneOfN">
            <summary>
            Declares that the skin can optionally have none or if not it must have one choice of a dependent skin of a mutually exclusive group
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategoryPermutations.Any">
            <summary>
            Represents a unique relationship where any permutation is valid
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinCategories">
            <summary>
            The various supported skins categories that give semantics to skin instances   
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.None">
            <summary>
            Represents the absence of any kind of category. It usually means no formal category was ever registered/configured for this skin. Highly unusual.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Supported">
            <summary>
            Opposite of the UnSupported category. Very generic category meaning TLO supports it. Could be custom, vanilla, fragement, full, color, font, touch etc. Doesn't care this just means is it releasable and will be supported by TLO
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Unsupported">
            <summary>
            Oppostive of the Supported category. Very generic category meaning TLO doesn't support  it. Could be custom, vanilla, fragement, full, color, font, touch etc. Doesn't care this just means it is unreleasable  and will be not supported by TLO
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Foundational">
            <summary>
            Opposite of the Fragment category. A skin of this type is meant to be the foundation for a certain look. It simply means a main skin that should provide the core of the look and provide most of the control templates. It can either be a MS provided one, a 3rd party or our own. It is typically a custom skin that we provide but does not have to be. The MS sytem skin is a good example of a foundational skin that is not necessarily customized by us. 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Fragment">
            <summary>
            Opposite of the Foundational category. A skin of this type is meant to simply be a xaml adder. Provides additional xaml to augment or override some aspects of the currently defined visual tree
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.System">
            <summary>
            Opposite of the Custom category. A skin of this type is meant to be totally compatible with the default vanilla MS look and behavior.  In fact they are supposed to either pass through the MS templates, copy them verbatim and only make VERY minor mods
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Custom">
            <summary>
            Opposite of the System category. A skin that has significant custom styling and templating. Don't infer much else other than it is a TLO created item
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Color">
            <summary>
            A skin that has provides color values for all the color brushes found in the base Color Skin fragment 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.CustomChrome">
            <summary>
            A skin that has significant custom styling and templating in the chrome area (border, titlebar, etc.) area
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Test">
            <summary>
            A skin that is meant for internal test purposes only
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Sample">
            <summary>
            A skin that is meant for external sample purposes only
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.UserSelectable">
            <summary>
            Opposite of the Hidden cateogry. A skin of this type is meant for an end user to discover and apply it
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Hidden">
            <summary>
            Opposite of the UserSelectable cateogry. A skin of this type is not meant to be applied or discovered given a certain context. If it is to be applied it is not to be the result of a user selection.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Any">
            <summary>
            Represents a unique relationship where any category is valid
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Active">
            <summary>
            Opposite of the Inactive category. Represents a skin that is currently merged into the app wide resource dictionary
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCategories.Inactive">
            <summary>
            Opposite of the Active category. Represents a skin that is not currently merged into the app wide resource dictionary
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder">
            <summary>
            The merge order that skins can declare with each other as part of their relationships
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder.Denied">
            <summary>
            Represents no merge order relationship meaning it won't be merged at all. NOTE: This relationship does not actually result in a merge
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder.Descendent">
            <summary>
            This group of skins will be merged first (before the next group)
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder.Child">
            <summary>
            This group of skins will be merged second (after the previous and just before the depender)
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder.Me">
            <summary>
            This category represents the skin itself
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder.Parent">
            <summary>
            This group of skins will be merged first (after the depender and before the next group)
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder.Ancestor">
            <summary>
            This group of skins will be merged second (after the previous and before the next group)
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder.Any">
            <summary>
            Represents no particular order. This is a unique relationship that causes any merge order relationship to be valid. NOTE: This relationship does not actually result in a merge
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinMergeStatus">
            <summary>
            The merge status as a result of an attempted application of a skin
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeStatus.Success">
            <summary>
            The merge was successfull. The skin was applied.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeStatus.Fail">
            <summary>
            Opposite of the success relationship. The skin was not applied
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeStatus.Denied">
            <summary>
            The relationship and or context was such that this skin was denied from being merged or applied. The skin was not applied
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMergeStatus.Canceled">
            <summary>
            A registered handler of the merge event cancelled the merge process. They had better know what they are doing. The skin was not applied
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility">
            <summary>
            The various compatibility relationships that skins can have with each other
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.Incompatible">
            <summary>
            The skins are so incompatible that the depender denies the merging of the dependee. If they were allowed to co-exist the system would crash or other really bad things would happen
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.NotRecommended">
            <summary>
            The skins are incompatible but not to the point of denying a merge at the skin merge level. Things may look bad but not worth failing the merge
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.Ambivalent">
            <summary>
            These two skins weren't made for each other or weren't made to compliment each other. The merge is allowed to happen but the overall visual appearance will not be enhanced.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.Me">
            <summary>
            A special category identify the middle ground and/or the skin itself
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.Optional">
            <summary>
            Declares a complimentary skin that is neither required nor turned on by default. They can come and go. They enhance the visual design. Ambient skin fragments and color scheme skin fragments are usually marked as optional.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.Recommended">
            <summary>
            Similar to the required relationship. The relationship begins as a requirement but can be removed and similar to the optional relationship it will live and look good without it. Skin fragments that really do improve the look of a foundational skin are usually marked as recommended. The system will allow an unregistration of this relationship.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.Required">
            <summary>
            The relationship is required. The depender cannot live without this relationship. If the dependent skin is not present the system will crash or the look and feel will be severely impaired. The system does not allow a removal of this relationship. Not even with a call to UnregisterSkinRelationship. Once setup it will live forever. The skin creator will need to change the skin definition/configuration if users/partners don't like/want this relationship
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility.Any">
            <summary>
            Declares a unique relationsihp where any compatibility level is valid. Usually used in the matching/querying API's. NOTE: Does not result in a merge.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships">
            <summary>
            The various miscelleneous relationships that skins can have with each other that are not required, are ambient, and is used to eventually declare an extensibility point in the API. 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships.None">
            <summary>
            Represents a unique relationship where none of the possible relationships are active. Highly unusual but may be meaningful given certain circumstances.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships.Color">
            <summary>
            Represents a special relationship between skins that indicates the callee provides color/coloring to the caller. A nice way to recognize a relationship that consists of a color scheme rather than querying each and every skin in a dependency tree to "guess" at which one might be the active color scheme for that skin
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships.Ambient">
            <summary>
            Represents a special relationship between skins that indicates the callee provides xaml look for all existing foundational skins that don't have an incompatible relationship. It an environmental/ambient skin fragment meant to enhance the look for all skins
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships.Any">
            <summary>
            Represents a unique relationship where all possible relationships are active. Highly unusual but may be meaningful given certain circumstances
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes">
            <summary>
            The rules to use when finding skins based on their relationship to each other 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.None">
            <summary>
            Represents the absence of any kind of matching mode
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.Exclusive">
            <summary>
            The relationship with the dependent skins must exactly match the desired realtionship to the exclusion of all other relationships. Meaning it won't be a match if it include more or less than the desired relationship
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.Inclusive">
            <summary>
            The relationship with the dependent skins must at least include all the desired realtionship but can include additional relationships as well. Meaning it won't be a match if it includes less than the desired relationship
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.Not">
            <summary>
            The relationship with the dependent skin should not include any of the categories
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.TraverseRelationships">
            <summary>
            The algorithm should traverse all relationships of the target skin to all leaf nodes in the relationship hierarchy looking for matches. 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.TraverseMergeRelationships">
            <summary>
            The algorithm should traverse all merge relationships of the target skin to all leaf nodes in the relationship hierarchy looking for matches. 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.TwoWay">
            <summary>
            The algorithm should check for a matching relationship between both the caller and callee and also the callee and the caller. Both directions.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes.Any">
            <summary>
            As long as the relationship doesn't match the "None" relationship it will return true
            For comparison purposes it acts like the "Inclusive" mode but it can be used as a "special" flag to query and return skins that have *ANY* kind of relationship
            Essentially represents that any mode is valid
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinChangedEventArgs">
            <summary>
            Event args for the SkinChanged event
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinChangedEventArgs.NewSkin">
            <summary>
            The new skin we just switched to
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinChangedEventArgs.PreviousSkin">
            <summary>
            The old skin we just switched from
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinChangedEventArgs.Category">
            <summary>
            The defining category that prompted the switch. This is for convenience instead of event handlers having to guess at what prompted the change by infering from the types, names or comparing the exhaustive list of categories
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Managers.SkinManager">
            <summary>
            Manages the application of or removal of dynamic skins. One would typically only use the Skinmanager object directly for advanced scenarios. 
            The UXManager class is the typical starting point for Wsl integration. It will set reasonable default. It also provide an API for the most common scenarios.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinManager.Instance">
            <summary>
            Static accessor to the instance of the SkinManager
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.AddSkin(Keysight.Ccl.Wsl.UI.Resources.Skins.Skin)">
            <summary>
            Add a new skin into the list of skins managed by the skin manager
            </summary>
            <param name="newSkin"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.RemoveSkin(Keysight.Ccl.Wsl.UI.Resources.Skins.Skin)">
            <summary>
            Removes an existing skin from the list of skins managed by the skin manager
            </summary>
            <param name="existingSkin"></param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FoundationalSkin">
            <summary>
            Query or set the active top level foundational skin
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FoundationalSkinInstance">
            <summary>
            Convenient property that retrieves the Skin object of the active top level foundational skin
            </summary>
            <returns></returns>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinManager.ColorSkinFragment">
            <summary>
            Query or set the active color scheme skin fragment
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Managers.SkinManager.ColorSkinFragmentInstance">
            <summary>
            Convenient property that retrieves the Skin object of the active top level color scheme skin fragment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.SkinFragment(System.String,System.Boolean)">
            <summary>
            Set any arbitrary skin fragment. Indicate the name of the skin fragment and whether you want it to be active or not
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FindSkinInstance(System.String)">
            <summary>
            Read only collection of skin names whose categories match the passed in bitwised categories
            </summary>
            <param name="skinName"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FindSkinInstance``1">
            <summary>
            Returns the skin instance that matches type T or null if not found.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>The matched skin instance or null.</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FindSkinInstance(System.Type)">
            <summary>
            Returns the skin instance whose type matches the paramater skinType or null if not found.
            </summary>
            <param name="skinType"></param>
            <returns>The matched skin instance or null.</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FindSkinInstances(Keysight.Ccl.Wsl.UI.Managers.SkinCategories,Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes)">
            <summary>
            Read only collection of skins whose categories contain the passed in Skin categories
            </summary>
            <param name="categories"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FindSkinNames(Keysight.Ccl.Wsl.UI.Managers.SkinCategories,Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes)">
            <summary>
            Read only collection of skin names whose categories match the passed in Skin categories using the desired matching mode
            </summary>
            <param name="categories"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Managers.SkinManager.SkinChanged">
            <summary>
            Skin changed event
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.OnSkinChanged(Keysight.Ccl.Wsl.UI.Managers.SkinChangedEventArgs)">
            <summary>
            A property on the SkinManager has changed 
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Managers.SkinManager.PropertyChanged">
            <summary>
            Property changed event
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.OnPropertyChanged(System.String)">
            <summary>
            A property on the SkinManager has changed 
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Managers.SkinManager.FixupVanillaWindows">
            <summary>
            Special advanced API to help style vanilla WPF Window types with the active Wsl Skin even though they don't derive from WslWindowBase, WslDialog, WslMainWindow
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.MarkupExtensions.EnumValuesMarkupExtension">
            <summary>
            Markup extension that allows Xaml to bind to the values of an enum
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.EnumValuesMarkupExtension.#ctor">
            <summary>
            Create a new instance of the EnumValuesMarkupExtension markup extension
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.EnumValuesMarkupExtension.#ctor(System.Type)">
            <summary>
            Create a new instance of the EnumValuesMarkupExtension and pass in the enum type
            </summary>
            <param name="enumType"></param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.EnumValuesMarkupExtension.EnumType">
            <summary>
            Property to set or get the enum type
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.EnumValuesMarkupExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Return the values of the enum type
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.MarkupExtensions.IUpdateableMarkupExtension">
            <summary>
            Notifies implementers, which typically use a WeakReference to the
            target object, to update the target object.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.IUpdateableMarkupExtension.UpdateTarget">
            <summary>
            Notifies implementers that the target object should be updated.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.IUpdateableMarkupExtension.IsTargetAlive">
            <summary>
            Queries implementers whether or not the target object is still alive.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension">
            <summary>
            Base class for XAML markup extensions that require runtime updating.  This class maintains a 
            WeakReference back to each associated target object provided to the markup extension.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.#ctor(Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager)">
            <summary>
            Create a new instance of the UpdateableMarkupExtension.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.TargetObjects">
            <summary>
            Gets a list of target objects the markup extension was used on. 
            </summary>
            <remarks>
            There is typically just one target object but markup extensions used 
            in templates could have zero, one or more target objects as the
            template is instantiated multiple times.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.TargetProperty">
            <summary>
            Gets the target property the markup extension was used on.
            </summary>
            <remarks>
            Can either be a <see cref="T:System.Windows.DependencyProperty"/> or <see cref="T:System.Reflection.PropertyInfo"/>
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.TargetPropertyType">
            <summary>
            Gets the type of the Target Property.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.IsTargetAlive">
            <summary>
            Gets a boolean value indicating if the associated target is still alive i.e. not garbage collected.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.IsInDesignMode">
            <summary>
            Returns true if a target attached to this extension is in design mode
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.GetValue">
            <summary>
            Returns the value associated with the key from the resource manager.
            </summary>
            <returns>The value from the resources if possible otherwise the default value.</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns the value for this instance of the markup extension.
            </summary>
            <param name="serviceProvider">The service provider</param>
            <returns>The value of the element</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.UpdateTarget">
            <summary>
            Update the target(s) associated with this markup extension instance.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.IsTarget(System.Object)">
            <summary>
            Gets a boolean value indicating whether the specified object in a target of the markup extension. 
            </summary>
            <param name="target">The target to check</param>
            <returns>True if the object is one of the targets for this extension</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.RegisterTarget(System.IServiceProvider)">
            <summary>
            Called by <see cref="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.ProvideValue(System.IServiceProvider)"/> to register the target property
            and object associated with this instance of the markup extension.   
            </summary>
            <param name="serviceProvider">The service provider</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtension.UpdateTarget(System.Object)">
            <summary>
            Called by UpdateTarget to update each target referenced by the extension
            </summary>
            <param name="target">The target to update</param>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager">
            <summary>
            Creates an instance of an UpdateableMarkupExtensionManager which holds
            onto a list of registered IUpdateableMarkupExtension objects.  The manager
            the manager is told to update these objects, 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager.#ctor">
            <summary>
            Create a new instance of the UpdateableMarkupExtensionManager.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager.#ctor(System.Int32)">
            <summary>
            Create a new instance of the UpdateableMarkupExtensionManager.
            </summary>
            <param name="cleanupThreshold">Determines how many times RegisterMarkupExtension gets called before the manager removes extensions that no longer refer to live targets.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager.CleanupThreshold">
            <summary>
            Gets or sets the threshold of new markup extension registrations that triggers a cleanup of 
            IUpdateableMarkupExtension whose target is no longer alive.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager.RegisteredMarkupExtensions">
            <summary>
            Returns a readonly copy of the the currently registered IUpdateableMarkupExtension objects.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager.UpdateAll">
            <summary>
            Updates all the targets of the registered markup extensions.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager.RegisterMarkupExtension(Keysight.Ccl.Wsl.UI.MarkupExtensions.IUpdateableMarkupExtension)">
            <summary>
            Registers a new markup extension instance.
            </summary>
            <param name="markupExtension">The markup extension to register</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.UpdateableMarkupExtensionManager.RemoveAllInactiveExtensions">
            <summary>
            Removes all the markup extensions that are inactive i.e. whose target is no longer considered alive. This
            removes a strong reference to the markup extension so that it can be garbage collected.
            </summary>
            <remarks>
            This method is called periodically as new <see cref="T:Keysight.Ccl.Wsl.UI.MarkupExtensions.IUpdateableMarkupExtension"/> objects 
            are registered to remove <see cref="T:Keysight.Ccl.Wsl.UI.MarkupExtensions.IUpdateableMarkupExtension"/> objects which no longer
            need to be updated because their target is no longer alive.
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.#ctor(System.String)">
            <summary>
            Allow calling the extension with a default parameter (id).
            Content="{local:Res HelloWorld}"
            </summary>
            <param name="key">The key that specifies a localization </param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.Key">
            <summary>
            The Resource key to retrieve
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.Static">
            <summary>
            A static value expression like props:Resources.HelloWorld in the 
            same format as used in the x:Static extension. This uses the
            strongly typed resources but avoids any of the lookups to find
            the resource manager.
            
            When using this syntax to point at strongly typed resources
            you don't need to specify a ResourceSet or Assembly because it
            these are explicitly tied to the strongly typed resource.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.ResourceSet">
            <summary>
            Optional Resource Set Name. If not provided it's
            assumed you want to access the global Resources
            resource set in Properties.Resources
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.Default">
            <summary>
            A default value that is returned when the the resource
            cannot be resolved. Also returned in the designer if
            there are no resources available.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.Format">
            <summary>
            A string.Format format string that is applied.
            Note when provided the result value is always 
            converted into a string.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.Converter">
            <summary>
            Allows to specify a custom Value Converter using standard WPF syntax.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.Assembly">
            <summary>
            Optional assembly name - use this if you are using
            this component in more than one assembly to uniquely
            identify the resource assembly
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            The core method to provide a localized value.
            
            Note the value can also be a non-string value to set non-string properties
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.ProvideValueInternal">
            <summary>
            Internal value retrieval
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.StaticResxExtension.FindDefaultResourceAssembly">
            <summary>
            This method tries to find the assembly of resources and the strongly 
            typed Resource class in a project so the designer works properly.
            
            It's recommended your application ALWAYS explicitly initializes the
            DefaultResourceAssembly and DefaultResourceManager in LocalizationSettings.
            
            When running in the designer this code tries to find 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension">
            <summary>
            A markup extension to allow resources for WPF Windows and controls to be retrieved
            from an embedded resource (resx) file associated with the window or control.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension._resourceManager">
            <summary>
            The resource manager to use for this extension.  Holding a strong reference to the
            Resource Manager keeps it in the cache while there are DynamicResxExtension that
            are using it.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension._rootObject">
            <summary>
            Stash a weak reference to the root of the XAML so we can default to the same name
            for the resx name. Covers the situation where .resx is dependentUpon the XAML file.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension._resxName">
            <summary>
            The explicitly set embedded Resx Name (if any).
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension._defaultResxName">
            <summary>
            The default resx name (based on the attached property).
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension._binding">
            <summary>
            The binding (if any) used to store the binding properties for the extension  
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.#ctor">
            <summary>
            Create a new instance of the markup extension.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.#ctor(System.String)">
            <summary>
            Create a new instance of the markup extension with a default Key.
            Allows calling the extension with a default parameter (Key).
            Content="{ext:DynamicResx HelloWorld}"
            </summary>
            <param name="key">The key used to get the value from the resources.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.Key">
            <summary>
            The name of the resource key.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.MultiBindingParent">
            <summary>
            Gets the parent DynamicResx elements for child DynamicResx elements
            participating in MultiBinding.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.Children">
            <summary>
            The child ResxExtensions (if any) when using MultiBinding expressions.
            </summary>
            <remarks>
            You can nest DynamicResx elements in this case the parent DynamicResx element
            value is used as a format string to format the values from child DynamicResx
            elements similar to a <see cref="T:System.Windows.Data.MultiBinding"/>.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.DefaultValue">
            <summary>
            The default value to use if the resource can't be found.
            </summary>
            <remarks>
            This particularly useful for properties which require non-null
            values because it allows the page to be displayed even if
            the resource can't be loaded.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.ResxName">
            <summary>
            The fully qualified name of the embedded resx (without .resources) to get the resource from.
            </summary>
            <remarks>
            If not specified, the attached property DefaultResxName is inspected to provide the ResxName.
            If that is not specified, then the ultimate fallback is the namespace of the associated XAML's
            root object.  This supports the scenario where a .resx file is sitting behind the associated
            .xaml file (by hand editing the .csproj file and setting the DependentUpon element of the resx
            file to refer to the XAML file.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.Binding">
            <summary>
            Return the associated binding for the extension
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingElementName">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.ElementName"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingPath">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.Path"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingRelativeSource">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.RelativeSource"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingSource">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.Source"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingXPath">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.XPath"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingConverter">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.Converter"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingGroupName">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.BindingBase.BindingGroupName"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingConverterCulture">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.ConverterCulture"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingConverterParameter">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.ConverterParameter"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindsDirectlyToSource">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.BindsDirectlyToSource"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingMode">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.Mode"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingNotifyOnSourceUpdated">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingNotifyOnTargetUpdated">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingNotifyOnValidationError">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingAsyncState">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.AsyncState"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingIsAsync">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.IsAsync"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingFallbackValue">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingTargetNullValue">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.BindingBase.TargetNullValue"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingValidatesOnDataErrors">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingValidatesOnExceptions">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.ValidatesOnExceptions"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingUpdateSourceTrigger">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger"/>.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.BindingValidationRules">
            <summary>
            Use the Resx value to format bound data.  See <see cref="P:System.Windows.Data.Binding.ValidationRules"/>.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Return the value for this instance of the Markup Extension
            </summary>
            <param name="serviceProvider">The service provider</param>
            <returns>The value of the element</returns>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.UpdateableMarkupExtensionManager">
            <summary>
            Return the UpdateableMarkupExtensionManager for this extension
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.UpdateAllTargets">
            <summary>
            Use the Markup Manager to update all targets
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.UpdateTarget(System.String)">
            <summary>
            Update the ResxExtension target with the given key
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.DefaultResxNameProperty">
            <summary>
            The ResxName attached dependency property.  This allows the ResxName to be provided
            at the top level of a XAML file.  Note that this doesn't always seem to flow to
            child content. Notably, DataGridTextColumn's do not inherit this value.  For a 
            DataGridTextColumn, the ResxName will need to be specified locally.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.GetDefaultResxName(System.Windows.DependencyObject)">
            <summary>
            Get the DefaultResxName attached property for the given target
            </summary>
            <param name="target">The Target object</param>
            <returns>The name of the Resx</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.SetDefaultResxName(System.Windows.DependencyObject,System.String)">
            <summary>
            Set the DefaultResxName attached property for the given target
            </summary>
            <param name="target">The Target object</param>
            <param name="value">The name of the Resx</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.GetValue">
            <summary>
            Return the value for the markup extension
            </summary>
            <returns>The value from the resources if possible otherwise the default value</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.UpdateTarget(System.Object)">
            <summary>
            Update the given target when the UI culture changes.
            </summary>
            <param name="target">The target to update.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.CreateBinding">
            <summary>
            Create a binding for this Resx Extension
            </summary>
            <returns>A binding for this Resx Extension</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.CreateMultiBinding">
            <summary>
            Create new MultiBinding that binds to the child Resx Extensioins
            </summary>
            <returns></returns>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.IsBindingExpression">
            <summary>
            Have any of the binding properties been set
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.IsMultiBindingParent">
            <summary>
            Is this ResxExtension being used as a multi-binding parent
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.IsMultiBindingChild">
            <summary>
            Is this ResxExtension being used inside another Resx Extension for multi-binding
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.HasEmbeddedResx(System.Reflection.Assembly,System.String)">
            <summary>
            Check if the assembly contains an embedded resx of the given name
            </summary>
            <param name="assembly">The assembly to check</param>
            <param name="resxName">The name of the resource we are looking for</param>
            <returns>True if the assembly contains the resource</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.FindResourceAssembly">
            <summary>
            Find the assembly that contains the type.
            </summary>
            <returns>The assembly if loaded (otherwise null)</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.GetResourceManager(System.String)">
            <summary>
            Get the resource manager for this type
            </summary>
            <param name="resxName">The name of the embedded resx</param>
            <returns>The resource manager</returns>
            <remarks>Caches resource managers to improve performance</remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.ConvertValue(System.Object)">
            <summary>
            Convert a resource object to the type required by the WPF element
            </summary>
            <param name="value">The resource value to convert</param>
            <returns>The WPF element value</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.GetDefaultValue(System.String)">
            <summary>
            Return the default value for the property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.MarkupExtensions.DynamicResxExtension.OnDefaultResxNamePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle a change to the attached DefaultResxName property.
            </summary>
            <param name="element">the dependency object (a WPF element)</param>
            <param name="args">the dependency property changed event arguments</param>
            <remarks>In design mode update the extension with the correct ResxName</remarks>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.AnimationsSkinFragment">
            <summary>
            ResourceDictionary containing styles and templates for the AnimationsSkinFragment skin.
            </summary>
            <summary>
            AnimationsSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.AnimationsSkinFragment.#ctor">
            <summary>
            Constructor that initializes the AnimationsSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.AnimationsSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraDesignTimeSkinFragment">
            <summary>
            ResourceDictionary containing styles and templates for the BistraDesignTimeSkinFragment skin.
            </summary>
            <summary>
            BistraDesignTimeSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraDesignTimeSkinFragment.#ctor">
            <summary>
            Constructor that initializes the BistraDesignTimeSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraDesignTimeSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraExtensionsSkinFragment">
            <summary>
            ResourceDictionary containing styles and templates for the BistraExtensionsSkinFragment skin.
            </summary>
            <summary>
            BistraExtensionsSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraExtensionsSkinFragment.#ctor">
            <summary>
            Constructor that initializes the BistraExtensionsSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraExtensionsSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraSkin">
            <summary>
            ResourceDictionary containing styles and templates for the BistraSkin skin.
            </summary>
            <summary>
            BistraSkin
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraSkin.#ctor">
            <summary>
            Constructor that initializes the BistraSkin Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraSkin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.ChromeSkinFragment">
            <summary>
            ResourceDictionary containing styles and templates for the ChromeSkinFragment skin.
            </summary>
            <summary>
            ChromeSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.ChromeSkinFragment.#ctor">
            <summary>
            Constructor that initializes the ChromeSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.ChromeSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraDark">
            <summary>
            This is the code-behind for the BistraDark ColorScheme class. You normally won't need to interact with this code;
            resources are available through the corresponding XAML
            file (BistraDark.xaml).
            </summary>
            <summary>
            BistraDark
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraDark.#ctor">
            <summary>
            BistraDark color scheme code-behind class. Initializes the resources for the BistraDark color scheme.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraDark.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraGray">
            <summary>
            This is the code-behind for the BistraGray ColorScheme class. You normally won't need to interact with this code;
            resources are available through the corresponding XAML
            file (BistraGray.xaml).
            </summary>
            <summary>
            BistraGray
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraGray.#ctor">
            <summary>
            BistraGray color scheme code-behind class. Initializes the resources for the BistraGray color scheme.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraGray.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraLight">
            <summary>
            This is the code-behind for the BistraLight ColorScheme class. You normally won't need to interact with this code;
            resources are available through the corresponding XAML
            file (BistraLight.xaml).
            </summary>
            <summary>
            BistraLight
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraLight.#ctor">
            <summary>
            BistraLight color scheme code-behind class. Initializes the resources for the BistraLight color scheme.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BistraLight.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.Midnight">
            <summary>
            This is the code-behind for the Midnight ColorScheme class. You normally won't need to interact with this code;
            resources are available through the corresponding XAML
            file (Midnight.xaml).
            </summary>
            <summary>
            Midnight
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Midnight.#ctor">
            <summary>
            Midnight color scheme code-behind class. Initializes the resources for the Midnight color scheme.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Midnight.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.Platinum">
            <summary>
            This is the code-behind for the Platinum ColorScheme class. You normally won't need to interact with this code;
            resources are available through the corresponding XAML
            file (Platinum.xaml).
            </summary>
            <summary>
            Platinum
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Platinum.#ctor">
            <summary>
            Platinum color scheme code-behind class. Initializes the resources for the Platinum color scheme.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Platinum.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.KioskCenteredSkinFragment">
            <summary>
            ResourceDictionary containing styles and templates for the KioskCenteredSkinFragment skin.
            </summary>
            <summary>
            KioskCenteredSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.KioskCenteredSkinFragment.#ctor">
            <summary>
            Constructor that initializes the KioskCenteredSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.KioskCenteredSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.CustomResizeBorderSkinFragment">
            <summary>
            ResourceDictionary containing styles and templates for the CustomResizeBorderSkinFragment skin.
            </summary>
            <summary>
            CustomResizeBorderSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.CustomResizeBorderSkinFragment.#ctor">
            <summary>
            Constructor that initializes the CustomResizeBorderSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.CustomResizeBorderSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.KioskSkinFragment">
            <summary>
            ResourceDictionary containing styles and templates for the KioskSkinFragment skin.
            </summary>
            <summary>
            KioskSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.KioskSkinFragment.#ctor">
            <summary>
            Constructor that initializes the KioskSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.KioskSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin">
            <summary>
            Skin class that contains the XAML resources and the smarts to apply them
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.#ctor(System.String,Keysight.Ccl.Wsl.UI.Managers.SkinCategories)">
            <summary>
            Constructor for the Skin class
            </summary>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.Initialize">
            <summary>
            Allows a derived skin to programmatically load resources.  If the skin has resources in an
            associated XAML file, you need to call base.Initialize() so those resources get loaded.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.ConfigureSkin">
            <summary>
            Default skin relationships are setup according to the declared skin categories
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.VerifyPreloadedSkin">
            <summary>
            Common heuristics and checks to make to ensure the integrity of a skin. It is what is says it is. It has the right relationships setup with other kinds of skins etc.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.VerifyLoadedSkin">
            <summary>
            Common heuristics and checks to make to ensure the integrity of a skin. It is what is says it is according to the actual XAML declarations. This check happens after the skin is actually loaded.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.Name">
            <summary>
            Name of the skin
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.Category">
            <summary>
            Type of skin it is represented by the set of bits turned on in the SkinCategories Enum[Flags] instance
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.SkinRelationships">
            <summary>
            Gets the dictionary of registered skin relationship that this skin has with other skins
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.SkinCategoryRelationships">
            <summary>
            Gets the dictionary of registered skin category relationships that this skin has with other categories
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.MergingEvent">
            <summary>
            Event that is trigged before this skin is about to be merged.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.MergedEvent">
            <summary>
            Event that is trigged after this skin has been merged.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.OnMerging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the MergingEvent event.
            </summary>
            <param name="e">A CancelEventArgs that contains the event data.</param>
            <remarks>
            <para>Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
            <para>The OnMerging method also allows derived classes to handle the event without attaching a delegate. 
            This is the preferred technique for handling the event in a derived class.</para>
            <para>Notes to Inheritors</para>
            <para>When overriding OnMerging in a derived class, be sure to call the base class's OnMerging method so that 
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.OnMerged(System.EventArgs)">
            <summary>
            Raises the MergedEvent event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>
            <para>Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
            <para>The OnMerged method also allows derived classes to handle the event without attaching a delegate. 
            This is the preferred technique for handling the event in a derived class.</para>
            <para>Notes to Inheritors</para>
            <para>When overriding OnMerged in a derived class, be sure to call the base class's OnMerged method so that 
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.Merge">
            <summary>
            Merges the xaml of this skin into the application wide resource dictionary
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnmergingEvent">
            <summary>
            Event that is trigged before this skin is about to be unmerged.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnmergedEvent">
            <summary>
            Event that is trigged after this skin has been unmerged.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.OnUnmerging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the UnmergingEvent event.
            </summary>
            <param name="e">A CancelEventArgs that contains the event data.</param>
            <remarks>
            <para>Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
            <para>The OnUnmerging method also allows derived classes to handle the event without attaching a delegate. 
            This is the preferred technique for handling the event in a derived class.</para>
            <para>Notes to Inheritors</para>
            <para>When overriding OnUnmerging in a derived class, be sure to call the base class's OnUnmerging method so that 
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.OnUnmerged(System.EventArgs)">
            <summary>
            Raises the UnmergedEvent event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>
            <para>Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.</para>
            <para>The OnUnmerged method also allows derived classes to handle the event without attaching a delegate. 
            This is the preferred technique for handling the event in a derived class.</para>
            <para>Notes to Inheritors</para>
            <para>When overriding OnUnmerged in a derived class, be sure to call the base class's OnUnmerged method so that 
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.Unmerge">
            <summary>
            Causes the MergeCount property to decrement and if this skin is no longer needed its resources are removed from the application wide resource dictionary.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.ForceRemoveFromApplicationDictionary">
            <summary>
            Regardless of MergeCount property this forces this skins resources to be removed from the application wide resource dictionary. As a side effect it sets its MergeCount to 0.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.RegisterSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility,Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships,System.Boolean)">
            <summary>
            Adds a relationship to the specified skin type. Passing in a true for the clobber parameter "replaces" the relationship
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.ModifySkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility,Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships,Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes)">
            <summary>
            Modifies an existing relationship to the specified skin type
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationship(System.Type)">
            <summary>
            Removes the specified skin type as a relationship no matter what the existing relationship is
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationships(Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility)">
            <summary>
            Removes all skin relationships that match both attributes or when either one is declared as "Any"
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility)">
            <summary>
            Removes the specified skin type as a reltionship when it matches both attributes or when either one is declared as "Any"
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationships(Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder)">
            <summary>
            Removes all skin relationships for this skin but only if it has the specified SkinMergeOrder relationship
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder)">
            <summary>
            Removes this skin relationship  but only if it has the specified SkinMergeOrder relationship
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationships(Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility)">
            <summary>
            Removes all skin relationships for this skin but only if it has the specified SkinCompatibility relationship
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility)">
            <summary>
            Removes this skin relationship but only if it has the specified SkinCompatibility relationship
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationships(Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships)">
            <summary>
            Removes all skin relationships but only if it has the specified misc relationship
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.UnregisterSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships)">
            <summary>
            Removes this particular skin relationship but only if it includes the specified misc relationship
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.HasSkinRelationship(System.Type)">
            <summary>
            Return true if this skin has any kind of relationship with the passed in skin
            </summary>
            <param name="skin"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.HasSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder)">
            <summary>
            Return true if this skin has this merge order relationship with the passed in skin
            </summary>
            <param name="skin"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.HasSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility)">
            <summary>
            Return true if this skin has this compatibility relationship with the passed in skin
            </summary>
            <param name="skin"></param>
            <param name="compatibility"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.HasSkinRelationship(System.Type,Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility,Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships,Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes)">
            <summary>
            Return true if this skin has this combination of relationships with the passed in skin
            </summary>
            <param name="skin"></param>
            <param name="order"></param>
            <param name="compatibility"></param>
            <param name="misc"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.HasMergeRelationship(System.Type)">
            <summary>
            A helper method to determine if ANY kind of relationship exists between these two skins
            </summary>
            <param name="skin"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.IsCompatible(Keysight.Ccl.Wsl.UI.Resources.Skins.Skin,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility,Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes)">
            <summary>
            A helper method to determine if any kind of incompatible (enemy) relationship exists between these two skins
            </summary>
            <param name="skin"></param>
            <param name="compatibility"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.FindMatchingSkinRelationships(Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility)">
            <summary>
            Return a dictionary of the skins whose relationship with this skin match the requested relationship
            </summary>
            <param name="compatibility"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.FindMatchingSkinRelationships(Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder)">
            <summary>
            Return a dictionary of the skins whose relationship with this skin match the requested relationship
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.FindMatchingSkinRelationships(Keysight.Ccl.Wsl.UI.Managers.SkinMergeOrder,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility,Keysight.Ccl.Wsl.UI.Managers.SkinMiscRelationships,Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes)">
            <summary>
            Return a dictionary of the skins whose relationship with this skin match the requested relationship
            </summary>
            <param name="order"></param>
            <param name="compatibility"></param>
            <param name="misc"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.RegisterSkinCategoryRelationship(Keysight.Ccl.Wsl.UI.Managers.SkinCategories,Keysight.Ccl.Wsl.UI.Managers.SkinCompatibility,Keysight.Ccl.Wsl.UI.Managers.SkinCategoryPermutations,System.Boolean)">
            <summary>
            Adds a relationship between the skin and the specified skin category type
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.IsSkinCategory(Keysight.Ccl.Wsl.UI.Managers.SkinCategories,Keysight.Ccl.Wsl.UI.Managers.SkinMatchingModes)">
            <summary>
            Return true if this skin contains the bitwised set of skin categories
            </summary>
            <param name="categoryMask"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.ModifyDynamicSkinCategories(Keysight.Ccl.Wsl.UI.Managers.SkinCategories)">
            <summary>
            Modifies the dynamic skin categories of a skin. Usually for internal use as the dynamic categories (like Active/Inactive) are set and updated at runtime by the system
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.Skin.Equals(Keysight.Ccl.Wsl.UI.Resources.Skins.Skin)">
            <summary>
            Implements the IEquatable interface so that any skin that has the same name will be considered a duplicate
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.SystemSkin">
            <summary>
            ResourceDictionary containing noop styles that simply point everything back to the MS default styles
            </summary>
            <summary>
            SystemSkin
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.SystemSkin.#ctor">
            <summary>
            Constructor that initializes the default System Skin. All the XAML-based styles and control templates for the premium skin will be initialized in this
            call. This skin allows our special WslMainWindow derived classes to take on the default system provided look.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.SystemSkin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.TouchFriendlySampleSkinFragment">
            <summary>
            Interaction logic for TouchFriendlySampleSkinFragment Skin
            </summary>
            <summary>
            TouchFriendlySampleSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.TouchFriendlySampleSkinFragment.#ctor">
            <summary>
            Constructor that initializes the TouchFriendlySampleSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.TouchFriendlySampleSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.TouchOptimizedSampleSkinFragment">
            <summary>
            Interaction logic for TouchOptimizedSampleSkinFragment Skin
            </summary>
            <summary>
            TouchOptimizedSampleSkinFragment
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.TouchOptimizedSampleSkinFragment.#ctor">
            <summary>
            Constructor that initializes the TouchOptimizedSampleSkinFragment Skin. All the XAML-based styles and control templates for this skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.TouchOptimizedSampleSkinFragment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.AlvaSkin">
            <summary>
            ResourceDictionary containing styles and templates for the Alva skin.
            </summary>
            <summary>
            AlvaSkin
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.AlvaSkin.#ctor">
            <summary>
            Constructor that initializes the Alva Skin. All the XAML-based styles and control templates for the premium skin will be initialized in this
            call. 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.AlvaSkin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.AlvaSkinExplicitStyles">
            <summary>
            Styles and templates that override the Microsoft WPF defaults, named with an Accl naming convention. 
            This is a base class for the actual Alva Skin. You should only use this if you want to reference the Alva Skin styles or templates by name.
            If you want to use the entire Alva Skin, and refer to the styles by regular WPF names, then use <see cref="T:Keysight.Ccl.Wsl.UI.Resources.Skins.AlvaSkin"/> directly.
            </summary>
            <summary>
            AlvaSkinExplicitStyles
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.AlvaSkinExplicitStyles.#ctor">
            <summary>
            Creates an instance of AlvaSkinExplicitStyles.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.AlvaSkinExplicitStyles.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BaseSkin">
            <summary>
            ResourceDictionary containing styles and templates for the Base skin.
            </summary>
            <summary>
            BaseSkin
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BaseSkin.#ctor">
            <summary>
            Constructor that initializes the Base Skin. All the XAML-based styles and control templates for the BaseSkin skin will be initialized in this
            call. 
            </summary>
            <remarks>
            Being a Skin Fragment it shouldn't hard-code any dependencies as foundational skins are the only ones that can 
            fully qualify their dependencies. Skin Fragments can't assume any order that they may be in or any dependency relationship 
            as they can be applied in a puzzle piece hodge/podge manner but only as dictated by the foundational skins.
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BaseSkin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BaseSkinExplicitStyles">
            <summary>
            Styles and templates that override the Microsoft WPF defaults, named with an Accl naming convention. 
            This is a base class for the actual Base Skin. You should only use this if you want to reference the Base Skin styles or templates by name.
            If you want to use the entire Base Skin, and refer to the styles by regular WPF names, then use <see cref="T:Keysight.Ccl.Wsl.UI.Resources.Skins.BaseSkin"/> directly.
            </summary>
            <summary>
            BaseSkinExplicitStyles
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BaseSkinExplicitStyles.#ctor">
            <summary>
            Creates an instance of BaseSkinExplicitStyles.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Resources.Skins.BaseSkinExplicitStyles.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.StandardSkinNames">
            <summary>
            This type provides compile-time checked string constants for the standard skin names.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.StandardSkinNames.System">
            <summary>
            Gets the string for the System skin name.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.StandardSkinNames.Alva">
            <summary>
            Gets the string for the Alva skin name.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.StandardSkinNames.Bistra">
            <summary>
            Gets the string for the Bistra skin name.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Utilities.DesignTimeSupport">
            <summary>
            Helper class to query design time mode
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Utilities.DesignTimeSupport.IsInDesignMode">
            <summary>
            Return true if the application is running in design mode inside of VS or Expression Blend
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.UXManager">
            <summary>
            The main WSL manager class that controls all the other manager objects that in turn define the skin, colorscheme, font etc. defaults
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.UXManager.Initialize">
            <summary>
            Initializes the user interface look using the Bistra Skin and the BistraDark color scheme
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.UXManager.Initialize(System.String)">
            <summary>
            Initializes the user interface look using the specified foundational skin name
            </summary>
            <param name="defaultSkinName">Specifies the default foundational skin name to use.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.UXManager.ColorSchemeNames">
            <summary>
            A read-only collection of all available color scheme skin names that have been registered with the system, independent of what the currently selected foundational skin may be
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.UXManager.ColorScheme">
            <summary>
            Gets or sets the color scheme skin from the list of possible color schemes for the currently selected foundational skin 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.UXManager.SkinNames">
            <summary>
            Gets the set of all supported "user selectable" foundational skin names that have been registered with the system
            Setting one of these would cause the overall default look and feel of the Wsl application to change
            Foundational skins provide all the styles/templates for all the MS stock WPF controls that we support or IOW the overall look and feel of the application
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.UXManager.Skin">
            <summary>
            Gets or sets the Foundational skin that is applied to the application.
            Foundational skins provide all the styles/templates for all the MS stock WPF controls that we support or IOW the overall look and feel of the application
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.UXManager.AmbientSkinNames">
            <summary>
            Gets the names of the Ambient skins (miscelleneous non foundational and non color scheme skins that are toggled on or off independent of what the active foundational skin and active color scheme skin may be) 
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.UXManager.ToggleAmbientSkin(System.String,System.Boolean)">
            <summary>
            Turns on or off an Ambient skin (examples are chrome, touch, etc.)
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.ValidationRules.FontSizeValidationRule">
            <summary>
            Validation rule for restricting the WSL NormalFontSize to prescribed limits of 8.0 to 16.0 inclusive.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.ValidationRules.FontSizeValidationRule.LowerSizeBound">
            <summary>
            Lower size bound for font size validation rule checking.  The prescribed default is 8.0.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.ValidationRules.FontSizeValidationRule.UpperSizeBound">
            <summary>
            Upper size bound for font size validation rule checking.  The prescribed default is 16.0.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ValidationRules.FontSizeValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Validates that the font size value passed in against an upper and lower bound.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.WslWindowBase">
            <summary>
            Base class for common functionality of WSL SDK windows and dialogs. Typically, to get the WSL SDK look and feel, you will derive your windows from <see cref="T:Keysight.Ccl.Wsl.UI.WslMainWindow"/> and your dialogs 
            from <see cref="T:Keysight.Ccl.Wsl.UI.WslDialog"/>, both of which derive from this class.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.#ctor">
            <summary>
            Default Constructor for the WslWindowBase class
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HelpButton">
            <summary>
            Gets the Help button for overriding style by derived classes
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasHelpButton">
            <summary>
            Defines whether the window has a Help button.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.WslWindowBase.HelpButtonClicked">
            <summary>
            Occurs when the user clicks the help button in the Window's title bar.
            </summary>
            <remarks>
            In order for the user to be able to invoke help, you first need to make the help button appear 
            in the title bar by setting the <see cref="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasHelpButton"/> property to <c>true</c>.
            NOTE: According to MSDN documentation the Help button will not appear in a standard window titlebar if the min/max buttons are also turned on
            This is not the case with our custom Wsl windows where we control the titlebar area. The Help button will appear if this property is turned on regardless of other factors
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.OnHelpButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raises the HelpButtonClicked event.
            </summary>
            <param name="e"></param>
            /// <param name="sender"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.OnApplyTemplate">
            <summary>
            Catch things when the style/template has been applied. Need to configure the custom chrome and event handlers after the visual tree is available
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.WslWindowBase.CloseButtonClicked">
            <summary>
            Occurs when the user click the Windows's close button in the Window's title bar.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasSysMenuIcon">
            <summary>
            Gets or sets a value that indicates whether the window has a System menu icon
            </summary>
            <remarks>
            A system menu provides a standard Restore, Move, Size, Min, Max, Close menu
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasDialogFrame">
            <summary>
            Gets or sets a value that indicates whether the window has a dialog frame instead of a standard Window frame.
            </summary>
            <remarks>
            A dialog frame style automatically removes the minimize and maximize buttons.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasTitleBar">
            <summary>
            Defines whether the window has a custom title bar.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasMaximizeButton">
            <summary>
            Defines whether the window has a Maximize button.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasMinimizeButton">
            <summary>
            Defines whether the window has a Minimize button.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.IsMinimized">
            <summary>
            Defines whether the window is currently minimized.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasCloseButton">
            <summary>
            Defines whether the window has a Close button.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HasCustomChrome">
            <summary>
            Defines whether the window has a custom chrome defined
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.ConfigureWindowChrome">
            <summary>
            Base implementation for configuring the chrome (title, min/max/restore/close buttons) area of windows
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.CloseButton">
            <summary>
            Gets the Close button for overriding its style by derived classes
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.TitleBar">
            <summary>
            Gets the Title bar for overriding its style by derived classes
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslWindowBase.HwndSource">
            <summary>
            Gets the HwndSource for this Window.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.OnClosed(System.EventArgs)">
            <summary>
            Raises the Closed event. 
            </summary>
            <remarks>
            <para>OnClosed raises the Closed event. </para>
            <para>A type that derives from Window may override OnClosed. The overridden method must call 
            OnClosed on the base class if Closed needs to be raised.</para>
            </remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.OnCloseButtonClicked(System.EventArgs)">
            <summary>
            Raises the CloseButtonClicked event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.SetStyle(System.Object,Keysight.Ccl.Wsl.UI.Managers.SkinChangedEventArgs)">
            <summary>
            Protected virtual method to apply whatever styling is required: At startup, on a skin change, etc. It will always be triggered whenever styling is needed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseLeftButtonDown virtual override for the entire window.  This event handler is used
            to enable drag-move operations when the user click on the window itself when no TitleBar is present
            </summary>
            <param name="e">Data for the event.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.TitleBarMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseLeftButtonDown event handler for the "TitleBar" named component of the 
            ControlTemplate.  This initiates a drag-move operation on the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.TitleBarMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseLeftButtonUp event handler for the "TitleBar" named component of the 
            ControlTemplate.  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.TitleBarMouseRightButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseRightButtonUp event handler for the "TitleBar" named component of the ControlTemplate.  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.TitleBarMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            MouseMove event handler for the "TitleBar" named component of the 
            ControlTemplate.  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.OnSourceInitialized(System.EventArgs)">
            <summary>
            Raises the SourceInitialized event.
            </summary>
            <remarks>
            <para>OnSourceInitialized raises the SourceInitialized event.</para>
            <para>This method has been overriden to hook the WndProc for this window. 
            A type that derives from Window may override OnSourceInitialized. 
            The overridden method must call OnSourceInitialized on the base class if SourceInitialized needs to be raised.</para>
            </remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslWindowBase.WndProcHook(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Windows message handler used as the message hook for catching  messages.
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="handled"></param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox">
             <summary>
             Displays an Keysight standard modal About Box.
             </summary>
             <example>
             <code description="The following code invokes a basic About Box:">
             private void BasicAboutBox_Click(object sender, RoutedEventArgs e)
             {
                 var aboutBox = new AboutBox("Modular Config Utility", "Version:  1.0", "2014", new Uri("pack://application:,,/App.ico"));
                 aboutBox.ShowModal(this);
             }
             </code> 
             <code description="The following code invokes a full-featured About Box, demonstrating most of the features of the AboutBox class:">
                     private void FullFeaturedAboutBox_Click(object sender, RoutedEventArgs e)
            {
                string appName = "14585A";
                var aboutBox = new AboutBox(appName, "Version: 0.1.0.1", "2014", new Uri("pack://application:,,/App.ico"));
            
                // Fill in optional subtitle
                aboutBox.ApplicationNameSubtitle = "Control and Analysis Software for the DC Power Analyzer";
            
                // Fill in license info
                aboutBox.ApplicationLicenseInformation = "This product is licensed to: John Doe, Acme Inc.";
            
                // Fill in product options
                aboutBox.IsOptionsVisible = true;
                aboutBox.OptionsLabelText = "Connected Frames: 0";
                aboutBox.Options.Add("Unit A: Foo, Firmware: 1.0.0.1, SerialNumber: MY00000001");
                aboutBox.Options.Add("Unit B: Bar, Firmware: 1.0.0.15, SerialNumber: MY00000004");
                aboutBox.Options.Add("Unit C: Baz, Firmware: 2.1.24536.0, SerialNumber: MY00000009");
                aboutBox.Options.Add("Unit D: PI, Firmware: 2.1.24536.0, SerialNumber: MY00000010");
                aboutBox.Options.Add("Unit E: Phi, Firmware: 2.1.24536.0, SerialNumber: MY00000006");
                aboutBox.Options.Add("Unit F: Tau, Firmware: 2.1.24536.0, SerialNumber: MY00000010");
                aboutBox.Options.Add("Unit G: Eps, Firmware: 2.1.24536.0, SerialNumber: MY00000003");
                aboutBox.Options.Add("Unit H: Zed, Firmware: 2.1.24536.0, SerialNumber: MY000000023");
            
                // Fill in additional information
                aboutBox.AdditionalInformation =
                    "Warning: This computer program is protected by copyright law and international treaties. Unauthorized reproduction or distribution of this program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted under the maximum extent possible under law.";
            
                // Add some command links
                aboutBox.Commands.Insert(0, new CommandViewModel("Diagnostics", new DelegateCommand&lt;object&gt;(_ =&gt;
                {
                    var moduleVersionDlgBox = new ModuleVersionInfoDialog(appName);
                    moduleVersionDlgBox.ShowModal(this);
                })));
                aboutBox.Commands.Insert(0, new CommandViewModel("System Info", "Starts the Microsoft System Information applet.", new DelegateCommand&lt;object&gt;(_ =&gt; Process.Start("msinfo32.exe"))));
                aboutBox.Commands.Insert(0, new CommandViewModel("EULA", "Display the end user license agreement for this product.", new DelegateCommand&lt;object&gt;(_ =&gt;
                {
                    string appDir = Path.GetDirectoryName(Assembly.GetExecutingAssembly().FullName);
                    string eulaPath = Path.Combine(appDir, "Eula.txt");
                    if (!File.Exists(eulaPath))
                    {
                        string msg = String.Format("Boot log file doesn't exist: {0}", eulaPath);
                        MessageBox.Show(msg, appName, MessageBoxButton.OK);
                        return;
                    }
                    string eulaText = File.ReadAllText(eulaPath);
            
                    var textViewDialog = new TextViewDialog(eulaText, appName + " End User License Agreement");
                    textViewDialog.ShowModal(this);
                })));
            
                // Configure help for this dialog box
                aboutBox.HasHelpButton = true;
                aboutBox.DialogHelpInvoked += (object _, EventArgs __) =&gt; MessageBox.Show("Help placeholder", appName, MessageBoxButton.OK);
            
                // Show the dialog box modally
                aboutBox.ShowModal(this);
            }
             </code></example>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.#ctor(System.String,System.String,System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox"/> class.
            </summary>
            <param name="applicationName">The name of the application.  It should be in the form of "{product_name}".</param>
            <param name="version">The detailed version number of the application.  This is typically in the form "Version: {major}.{minor}.{build}.{revision}".
            You may append additional information about the product's version status such as "Alpha", "Beta" or "Preview".
            </param>
            <param name="copyrightDates">The copyright dates for the product.  All Keysight products should display copyright information.
            This dates should specify dates of the product's release and can vary in form from "2010" to "2002-2010" to "1998, 2000, 2003-2010".
            See the corporate branding site for more info on displaying copyright dates: http://marketing.keysight.com/brand/copyright_format.shtml.</param>
            <param name="applicationImageUri">The Uri to the application's icon.  This should be a 64x64 pixel image that supports
            transparency if the icon is non-rectangular.</param>
            <example>
            <code>
            using System;
            using System.Windows;
            using System.Windows.Documents;
            using System.Windows.Navigation;
            using Keysight.Ccl.Wsl.UI;
            using Keysight.Ccl.Wsl.UI.Dialogs;
            
            public partial class MainWindow : Window
            {
                public MainWindow()
                {
                    InitializeComponent();
                }
            
                private void AboutBox_Click(object sender, RoutedEventArgs e)
                {
                    var aboutBox = new AboutBox("VEE Pro", "Version:  9.0.11705.0 (Sep 05, 2008)",
                                                "1991,1993,1996-2000,2006,2008", new Uri("pack://application:,,/App.ico"))
                    {
                        ApplicationLicenseInformation = "Licensed to:\nName:\t\tJohn Doe\nCompany:\tKeysight Technologies\nProduct Key:\tKeysight Internal",
                        AdditionalInformation = "MATLAB® is a registered trademark of The MathWorks, Inc."
                    };
                    aboutBox.ShowModal(this);
                }
            }
            </code>
            </example>        
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.SupportCommand">
            <summary>
            Gets a predefined SupportCommand that launches the Keysight find/support URL in a web browser.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.Commands">
            <summary>
            Gets the collection of commands.  This can be used to insert new commands or clear
            out the predefined "Support" command.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.Options">
            <summary>
            Gets the collection that holds the options/add-ins to be displayed in the Options section of the AboutBox.
            </summary>
            <remarks>
            See the <see cref="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.OptionsLabelText"/> property to set the text of the label that appears above the list of options/add-ins.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.UIElements">
            <summary>
            Gets the collection of UIElements in the AboutBox's window.  Use this to customize
            containers (for example, to substitute a DataGrid for a ListBox) or to provide access to each TextBlock's
            Inlines collection for creating Bold or Italic text runs.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.ApplicationImageUri">
            <summary>
            Get or sets the Uri to the application's product icon resource.  This should be a 64x64 pixel image.
            </summary>
            <example>
            <code>
            using System;
            using System.Windows;
            using System.Windows.Documents;
            using System.Windows.Navigation;
            using Keysight.Ccl.Wsl.UI;
            using Keysight.Ccl.Wsl.UI.Dialogs;
            
            public partial class MainWindow : Window
            {
                public MainWindow()
                {
                    InitializeComponent();
                }
            
                private void AboutBox_Click(object sender, RoutedEventArgs e)
                {
                    var appIconUri = new Uri("pack://application:,,/App.ico");
                    var aboutBox = new AboutBox("Interactive IO", "Version:  15.5.12824.0", "2002-2009", appIconUri);
                    aboutBox.ShowModal(this);
                }
            }
            </code>
            </example>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.ApplicationName">
            <summary>
            Gets or sets the application's name.  The application name should NOT include the company name.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.ApplicationNameSubtitle">
            <summary>
            Gets or sets an optional subtitle for the application's name.  
            </summary>
            <remarks>
            This is optional and can be used to display a subtitle such as "Control and Analysis Software for the DC Power Analyzer".
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.ApplicationVersionInformation">
            <summary>
            Gets or sets the application's version information.
            </summary>
            <remarks>
            This information should typically be in the form: "Version: {major}.{minor}.{build}.{revision}".
            You can also use this string to display application release status such as "Alpha", "Beta", "Internal Use Only", etc.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.ApplicationLicenseInformation">
            <summary>
            Gets or sets the application's license information.
            </summary>
            <remarks>
            Use this string to display license information including who the software is licensed to, 
            product key if applicable, trial status, expiration date if this is a trial version of the application.
            Note that you can embed newlines as well as tabs to format the string that appears on the AboutBox.
            For additional formatting capabilities, see <see cref="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.ApplicationLicenseInformationTextBlock"/>.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AdditionalInformation">
            <summary>
            Gets or sets the additional information text that appears just above the copyright text.
            </summary>
            <remarks>
            Use this area to display additional information like copyright/trademark text from products
            that are embedded in your product and require attribution.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.CopyrightDates">
            <summary>
            Gets or sets the copyright date string that will be appended to the standard Keysight copyright notice.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.Copyright">
            <summary>
            Gets the copyright date information.  Internal use for data binding.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.OptionsMaxLines">
            <summary>
            Gets or sets the maximum number of lines the Options ListBox will display before the vertical scrollbar appears.  The default is 4.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.IsOptionsVisible">
            <summary>
            Gets or sets the value that indicates whether the Options ListBox is visible or collapsed.  The default is false.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.OptionsLabelText">
            <summary>
            Gets or sets the header text for the option/add-in Label above the Options ListBox.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.HasHelpButton">
            <summary>
            Gets or sets a value that indicates whether a Help button is displayed in the title bar.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.DialogHelpInvoked">
            <summary>
            Occurs when the user clicks the Help button in the dialog's title bar.
            </summary>
            <remarks>
            For the user to be able to invoke help, you first need to make the Help button appear 
            in the title bar by setting the <see cref="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.HasHelpButton"/> property to true.
            NOTE: According to MSDN documentation the Help button will not appear in a standard window titlebar if the min/max buttons are also turned on
            This is not the case with our custom Wsl windows where we control the titlebar area. The Help button will appear if this property is turned on regardless of other factors
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.ShowModal(System.Windows.Window)">
            <summary>
            Shows the AboutBox as a modal dialog box.
            </summary>
            <param name="owner">A Window that represents the owner window of the AboutBox.</param>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements">
            <summary>
            A container for the underlying WPF elements used in the dialog.  These elements can be used
            directly to tweak the visual appearance.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.Window">
            <summary>
            Gets the AboutBox's Window element.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.ApplicationImage">
            <summary>
            Gets the Image element used to display the application's icon.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.ApplicationNameTextBlock">
            <summary>
            Gets the TextBlock used to display the application's name.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.ApplicationNameSubtitle">
            <summary>
            Gets the TextBlock used to display the application subtitle text if present.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.CommandLinksStackPanel">
            <summary>
            Gets the StackPanel used to display the command links ItemsControl.  Using
            this StackPanel, you can place UI elements above or below the command links ItemsControl.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.ApplicationLicenseInformationTextBlock">
            <summary>
            Gets the TextBlock used to display the license information if present.
            </summary>
            <remarks>
            Use this text block to adjust font family and font size, and use the TextBlock.Inlines collection to 
            add bold/italic or hyperlink text to the TextBlock.  This TextBlock is Collapsed by default; set 
            the Visibility of the TextBlock to Visible to make it appear on the AboutBox.
            </remarks>
            <example>
            <code>
            using System;
            using System.Windows;
            using System.Windows.Documents;
            using System.Windows.Navigation;
            using Keysight.Ccl.Wsl.UI;
            using Keysight.Ccl.Wsl.UI.Dialogs;
            
            public partial class MainWindow : Window
            {
                public MainWindow()
                {
                    InitializeComponent();
                }
            
                private void AboutBox_Click(object sender, RoutedEventArgs e)
                {
                    var aboutBox = new AboutBox("Interactive IO", "Version:  15.5.12824.0", "2002-2009", new Uri("pack://application:,,/App.ico"));
            
                    var textBlock = aboutBox.UIElements.ApplicationLicenseInformationTextBlock;
                    var hyperLink = new Hyperlink(new Run("Keysight Home Page")) { NavigateUri = new Uri("http://www.keysight.com") };
                    hyperLink.RequestNavigate += (object _, RequestNavigateEventArgs ea) => Process.Start(ea.Uri.ToString());
                    textBlock.Text = String.Empty;
                    textBlock.Inlines.Add(new Bold(new Run("License Information:")));
                    textBlock.Inlines.Add(new Italic(new Run(" John Doe\n")));
                    textBlock.Inlines.Add(hyperLink);
                    textBlock.Visibility = Visibility.Visible;
            
                    aboutBox.ShowModal(this);
                }
            }
            </code>
            </example>            
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.MainGrid">
            <summary>
            Gets the Grid object used to layout the various areas of the AboutBox UI.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.OptionsLabel">
            <summary>
            Gets the Label used to display the options header if present.
            </summary>
            <remarks>
            Use this Label to adjust font family and/or font size. 
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.OptionsListBox">
            <summary>
            Gets the ListBox used to display the options/add-in items.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.OptionsStackPanel">
            <summary>
            Gets the StackPanel used to lay out the OptionsLabel and OptionsListBox.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.AboutBox.AboutBoxUIElements.AdditionalInformationTextBlock">
            <summary>
            Gets the TextBlock used to display additional information if present.
            </summary>
            <remarks>
            Use this text block to adjust font family and font size, and use the TextBlock.Inlines collection to 
            add bold/italic or hyperlink text to the TextBlock.  This TextBlock is Collapsed by default; set 
            the Visibility of the TextBlock to Visible to make it appear on the AboutBox.
            </remarks>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen">
            <summary>
            Contract through which the client application can talk to the splash screen.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.ProductName">
            <summary>
            The official product name that will show up in the product specific area.
            This property is not optional and a default will be set for it unless you specify otherwise.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.ProductId">
            <summary>
            The official product ID that a consumer can set.
            This property is optional.
            </summary>
            <remarks>
            If your ProductID requires more than one line to display in the splash screen, it will not be displayed correctly. 
            You will need to include the product ID in the background image of your splash screen instead of specifying it via the 
            ProductId property.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.AdditionalProductInfo">
            <summary>
            An area for additional, optional product-specific information to be displayed on your splash screen.
            It will be formatted with a smaller font to look subordinate to the primary product information.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.CloseSplashScreen(System.Boolean)">
            <summary>
            Closes the splash screen window and everything inside it.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.ShowSplashScreen">
            <summary>
            Displays the splash screen window to the user.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.ProgressBarPercentage">
            <summary>
            A double value representing progress bar progress.
            The range is 0-1.
            </summary>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.CancelRequested">
            <summary>
            An optional event that will be called if the user requests a cancellation of the application startup.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.SetStatusMessage(System.String)">
            <summary>
            Sets the status window text to the value passed in. Most useful for one line updates.
            This is a complete replacement: It does not append the text to the existing text. See <see cref="M:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.AppendStatusMessage(System.String)"/> to append text.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.AppendStatusMessage(System.String)">
            <summary>
            Appends the value of the parameter to the existing text in the status window.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen.CopyrightDate">
            <summary>
            The year or year range part of the copyright notice that your application needs to specify.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo">
            <summary>
            Provides information about a module's version and timestamp information.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of a ModuleVersionInfo object.
            </summary>
            <param name="name">The name of the module.</param>
            <param name="fileVersion">The file version number of the module.</param>
            <param name="path">The full path to the module's file.</param>
            <param name="timestamp">The timestamp of the module's file.</param>
            <remarks>
            This object represents diagnostics data for a module that is loaded into a process.
            </remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of a ModuleVersionInfo object.
            </summary>
            <param name="name">The name of the module.</param>
            <param name="fileVersion">The file version number of the module.</param>
            <param name="assemblyVersion">The assembly version of the managed module.</param>
            <param name="path">The full path to the module's file.</param>
            <param name="timestamp">The timestamp of the module's file.</param>
            <remarks>
            This object represents diagnostics data for a module that is loaded into a process.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.Name">
            <summary>
            Gets the name of the module.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.FileVersion">
            <summary>
            Gets the file version number of the module.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.AssemblyVersion">
            <summary>
            Gets the assembly version number of the module.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.Timestamp">
            <summary>
            Gets the timestamp of the module's file.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.Path">
            <summary>
            Gets the full path to the module's file.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo.ToString">
            <summary>
            Returns the ModuleVersionInfo as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog">
            <summary>
            Displays text in a basic TextBox with scroll bars.  Useful for displaying a EULA
            or boot log text.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of a TextViewDialog object.
            </summary>
            <param name="text">A <see cref="T:System.String"/> that specifies the text to display.</param>
            <param name="caption">A <see cref="T:System.String"/> that specifies the title bar caption to display.</param>
            <example>
            <code>
            using System;
            using System.IO;
            using System.Windows;
            using System.Windows.Documents;
            using System.Windows.Navigation;
            using Keysight.Ccl.Wsl.UI;
            using Keysight.Ccl.Wsl.UI.Dialogs;
            
            public partial class MainWindow : Window
            {
                public MainWindow()
                {
                    InitializeComponent();
                }
            
                private void ViewBootLog_Click(object sender, RoutedEventArgs e)
                {
                    string bootLogText = File.ReadAllText(@"C:\bootlog.txt");
                    var textViewDialog = new TextViewDialog(bootLogText, "Keysight 89600 VSA Boot Log");
                    textViewDialog.ShowModal(this);
                }
            }
            </code>
            </example>        
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.Caption">
            <summary>
            Gets or sets the caption for this dialog's title bar. Internal use for data binding.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.Text">
            <summary>
            Gets or sets the primary text to be display in this dialog box. Internal use for data binding.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.UIElements">
            <summary>
            Gets the collection of UIElements in the TextViewDialog's window.  Use this to customize
            the Window (size) or the underlying TextBox.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.ShowModal(System.Windows.Window)">
            <summary>
            Displays the TextViewDialog in front of the specified window.
            </summary>
            <param name="owner">A <see cref="T:System.Windows.Window"/> that represents the owner window of the dialog.</param>
            <remarks>
            This call is modal and will not return until the user closes the dialog.
            </remarks>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.TextViewUIElements">
            <summary>
            A container for the underlying WPF elements used in the dialog.  These elements can be used
            directly to tweak the visual appearance.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.TextViewUIElements.Window">
            <summary>
            Gets the TextViewDialog's Window element.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.TextViewDialog.TextViewUIElements.TextBox">
            <summary>
            Get's the TextViewDialog's TextBox element.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.AboutBoxWindow">
            <summary>
            Interaction logic for AboutBoxWindow.xaml
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.AboutBoxWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoDialog">
            <summary>
            Displays a Keysight styled modal dialog box with diagnostic information including the name,
            version number and timestamp for every image loaded into the current process.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoDialog.#ctor(System.String)">
            <summary>
            Creates a new instance of a ModuleVersionInfoDialog object.
            </summary>
            <param name="applicationName"></param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoDialog.ApplicationName">
            <summary>
            Gets the application name.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoDialog.ModuleVersionInfoCollection">
            <summary>
            Gets the collection of <see cref="T:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfo"/> objects corresponding to the images loaded by the current process.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoDialog.CopyToClipboardCommand">
            <summary>
            Gets the command that copies all of the module version information to the clipboard in tab-delimited format.  Internal use for data binding.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoDialog.ShowModal(System.Windows.Window)">
            <summary>
            Displays the ModuleVersionInfoDialog in front of the specified window.
            </summary>
            <param name="owner">A <see cref="T:System.Windows.Window"/> that represents the owner window of the dialog.</param>
            <remarks>
            This call is modal and will not return until the user closes the dialog.
            </remarks>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoWindow">
            <summary>
            Interaction logic for ModuleVersionInfoWindow.xaml
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.ModuleVersionInfoWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.SplashScreenClassFactory">
            <summary>
            Static class factory for creating new instances of the splash screen.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.SplashScreenClassFactory.CreateSplashScreen(System.Type,System.String,System.String)">
            <summary>
            A static helper method that creates a new splash screen and returns the <see cref="T:Keysight.Ccl.Wsl.UI.Dialogs.ISplashScreen"/> interface.
            The parameters are the required properties that must be set on a splash screen.
            </summary>
            <param name="contentType">The Type of the product-specific content to render.  It should be something that the Activator class can instantiate and a XAML contentobject can render. In most cases this will be a simple UserControl.</param>
            <param name="productName">The name of your product. It should take the form "{product name}"</param>
            <param name="copyrightDate">The copyright date for your product. It can be a specific year or range. It should take the form "{year}" or "{year-year}".</param>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.SplashScreenWindow">
            <summary>
            The splash screen window class
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.SplashScreenWindow.#ctor">
            <summary>
            Default constructor for the splash screen window
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.SplashScreenWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Dialogs.TextViewWindow">
            <summary>
            Interaction logic for TextViewWindow.xaml
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Dialogs.TextViewWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.DelegateCommand`1">
            <summary>
            A <see cref="T:System.Windows.Input.ICommand"/> whose delegates can be attached for <see cref="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.Execute(`0)"/> and <see cref="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.CanExecute(`0)"/>.
            </summary>
            <typeparam name="T">Parameter type.</typeparam>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of <see cref="T:Keysight.Ccl.Wsl.UI.DelegateCommand`1"/>.
            </summary>
            <param name="executeMethod">Delegate to execute when Execute is called on the command.  This can be null to just hook up a CanExecute delegate.</param>
            <remarks><seealso cref="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.CanExecute(`0)"/>Will always return true.</remarks>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            Initializes a new instance of <see cref="T:Keysight.Ccl.Wsl.UI.DelegateCommand`1"/>.
            </summary>
            <param name="executeMethod">Delegate to execute when Execute is called on the command.  This can be null to just hook up a CanExecute delegate.</param>
            <param name="canExecuteMethod">Delegate to execute when CanExecute is called on the command.  This can be null.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.CanExecute(`0)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <see langword="null" />.</param>
            <returns>
            <see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.Execute(`0)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <see langword="null" />.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.DelegateCommand`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute. You must keep a hard
            reference to the handler to avoid garbage collection and unexpected results. See remarks for more information.
            </summary>
            <remarks>
            When you subscribe to the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged"/> event using 
            code, you will need to keep a hard reference to the event handler. (You do not need to do this when binding using XAML.) 
            This is to prevent 
            garbage collection of the event handler: The command implements the Weak Event pattern, so it does not have
            a hard reference to this handler. In most scenarios, there is no reason to sign up for the CanExecuteChanged event directly, 
            but if you do, you
            are responsible for maintaining the reference.
            </remarks>
            <example>
            The following code holds a reference to the event handler. The myEventHandlerReference value should be stored
            in an instance member to prevent it from being garbage collected.
            <code>
            EventHandler myEventHandlerReference = new EventHandler(this.OnCanExecuteChanged);
            command.CanExecuteChanged += myEventHandlerReference;
            </code>
            </example>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.System#Windows#Input#ICommand#Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.OnCanExecuteChanged">
            <summary>
            Raises <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged"/> on the UI thread so every 
            command invoker can requery <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)"/> to check if the
            command can execute.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.RaiseCanExecuteChanged">
            <summary>
            Raises <see cref="E:Keysight.Ccl.Wsl.UI.DelegateCommand`1.CanExecuteChanged"/> on the UI thread so every command invoker
            can requery to check if the command can execute.
            <remarks>Note that this will trigger the execution of <see cref="M:Keysight.Ccl.Wsl.UI.DelegateCommand`1.CanExecute(`0)"/> once for each invoker.</remarks>
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager">
            <summary>
            Handles management and dispatching of EventHandlers in a weak way.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager.CallWeakReferenceHandlers(System.Object,System.Collections.Generic.List{System.WeakReference})">
            <summary>
            Invokes the handlers 
            </summary>
            <param name="sender"></param>
            <param name="handlers"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager.CallWeakReferenceHandlers``1(System.Object,System.Collections.Generic.List{System.WeakReference},``0,System.Boolean)">
            <summary>
             Invokes the handlers 
            </summary>
            <param name="sender"></param>
            <param name="handlers"></param>
            <param name="eventArgs"></param>
            <param name="useApplicationDispatcherToMarshalOntoMainThread"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager.AddWeakReferenceHandler(System.Collections.Generic.List{System.WeakReference}@,System.EventHandler,System.Int32)">
            <summary>
             Adds a handler to the supplied list in a weak way.
            </summary>
            <param name="handlers">Existing handler list.  It will be created if null.</param>
            <param name="handler">Handler to add.</param>
            <param name="defaultListSize">Default list size.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager.AddWeakReferenceHandler``1(System.Collections.Generic.List{System.WeakReference}@,System.EventHandler{``0},System.Int32)">
            <summary>
             Adds a handler to the supplied list in a weak way.
            </summary>
            <param name="handlers">Existing handler list.  It will be created if null.</param>
            <param name="handler">Handler to add.</param>
            <param name="defaultListSize">Default list size.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager.RemoveWeakReferenceHandler(System.Collections.Generic.List{System.WeakReference},System.EventHandler)">
            <summary>
             Removes an event handler from the reference list.
            </summary>
            <param name="handlers">Handler list to remove reference from.</param>
            <param name="handler">Handler to remove.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager.RemoveWeakReferenceHandler``1(System.Collections.Generic.List{System.WeakReference},System.EventHandler{``0})">
            <summary>
             Removes an event handler from the reference list.
            </summary>
            <param name="handlers">Handler list to remove reference from.</param>
            <param name="handler">Handler to remove.</param>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.WeakEventHandlerManager.DispatcherProxy">
            <summary>
            Hides the dispatcher mis-match between Silverlight and .Net, largely so code reads a bit easier
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.WslDialog">
            <summary>
            Base class for all WSL SDK based dialogs. If you want your dialog box to have the WSL SDK look and feel, you must derive from this class.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.#ctor">
            <summary>
            Default constructor for the WSL SDK dialog base class. It sets the default styles, size, etc.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslDialog.DefaultLocation">
            <summary>
            The default location of this dialog.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslDialog.IgnoreCloseAllDialogs">
            <summary>
            Determines whether this dialog stays open even after a call to "DialogManager.Instance.CloseAllDialogs() tries to close it
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.IsDialogModal">
            <summary>
            Returns true if this dialog is modal
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslDialog.AnimateDialogMinimizeAndRestore">
            <summary>
            Determines whether the dialog should be animated when it
            is minimized and restored.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslDialog.DefaultMaxSize">
            <summary>
            Maximum size for all dialogs (applied when dialogs are first loaded).
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslDialog.ScreenWorkingArea">
            <summary>
            Sets a rectangle defining the working area of the screen.
            (This is the virtual desktop size minus any permanently docked toolbars, such as the start bar.)
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.ConfigureWindowChrome">
            <summary>
            WslDialog implementation for configuring the chrome (title, min/max/restore/close buttons) area for the WslDialog
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.OnCloseButtonClicked(System.EventArgs)">
            <summary>
            CloseButtonPressed()
            Overridable method called when the user presses the Close button.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.OnClosed(System.EventArgs)">
            <summary>
            Raises the Closed event. 
            </summary>
            <remarks>
            <para>OnClosed raises the Closed event. </para>
            <para>A type that derives from Window may override OnClosed. The overridden method must call 
            OnClosed on the base class if Closed needs to be raised.</para>
            </remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.SetPosition(System.Windows.Point)">
            <summary>
            Sets the location of the dialog to the specified position.  
            </summary>
            <remarks>The position is specified in 
            screen coordinates, but the Left and Top properties of the Window class are in Device 
            Independent Units (DIU's), where 1 DIU = 1/96 inch.  Therefore, this method must take into
            account any custom DPI scaling factor set in Windows.</remarks>
            <param name="position">Position to set, in screen coordinates.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.Initialize">
            <summary>
            Sets the position and performs other initialization upon first loading.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.WslDialog_Closed(System.Object,System.EventArgs)">
            <summary>
            Closing event handler.  Special code added here to work-around a bug in the WPF windows
            management.  The defect occurs when "owner-nested" dialog are opened and then closed
            in reverse order.  When the last child dialog is closed, the main application window
            would fall back in the z-order relative to other active applications.
            The work-around is to call Activate() on the Owner window of the dialog being closed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.RestorePreMinimizedState">
            <summary>
            Restores the visual state to undo minimized.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.MinimizeButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Click event handler for the Minimize/Restore button.  Toggles the state of IsMinimized
            and transitions the dialog into the new state.  Animates the transition if the static
            bool AnimateDialogMinimizeAndRestore is true.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.RestoreAnimationCompleted(System.Object,System.EventArgs)">
            <summary>
            Completed event handler for the 'mRestoreAnimation' animation.  Simply restores the
            saved pre-minimized visual state.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.SetMinimizedState">
            <summary>
            Configures the dialog for "Minimized" state.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.mMinimizeAnimation_Completed(System.Object,System.EventArgs)">
            <summary>
            Completed event handler for the mMinimizeAnimation animation.  Simply calls
            SetMinimizeState().
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslDialog.SavePreMinimizedState">
            <summary>
            Saves the visual state before the dialog is minimized so that it can be restored.
            Also sets some important properties (which are later restored) to allow animations
            to work.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.WslMainWindow">
            <summary>
            Main window base class. Derive from this class for your top-level windows if you want the WSL SDK look.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.#ctor">
            <summary>
            Default constructor for the top-level window base class.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.WslMainWindow.HasRestoreButtonProperty">
            <summary>
            Boolean to determine whether the window has a Restore button.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.WslMainWindow.MenuContentProperty">
            <summary>
            Holds the content for the top-level menu.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.WslMainWindow.ButtonPanelContentProperty">
            <summary>
            Hold the content for additional or optional button panel content.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.OnApplyTemplate">
            <summary>
            Catch things when the style/template has been applied. Need to configure the custom chrome and event handlers after the visual tree is available
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslMainWindow.HasRestoreButton">
            <summary>
            Defines whether the window has a Restore button.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslMainWindow.MenuContent">
            <summary>
            The XAML that defines the top level menus and their content.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.WslMainWindow.ButtonPanelContent">
            <summary>
            The XAML that defines any custom content to the left of the existing main window buttons
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.WndProcHook(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Windows message handler used as the message hook for catching  messages. 
            It has been hooked and overriden in the WslWindowBase class and exposed as a protected virtual method
            This is for convenience of derived types handling advanced scenarios by handling windows messages 
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="handled"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.ConfigureWindowChrome">
            <summary>
            WslMainWindow implementation for configuring the chrome (title, min/max/restore/close buttons) area for the WslMainWindow
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.TitleBarMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overriden left mouse button click down handler on the "TitleBar" named component to ensure the main window changes state on a double click or drag/move
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.TitleBarMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overriden left mouse button click up handler on the "TitleBar" named component to ensure we turn off the special drag/move handler for a maximized window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.TitleBarMouseRightButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overriden right mouse button click up handler on the "TitleBar" named component to launch the system menu
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.TitleBarMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Overriden mouse move handler on the "TitleBar" named component to ensure we turn on the special drag/move handler for a maximized window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.ToggleWindowState(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Overridable method called when the window is about to change its WindowState
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.SetMaxRestoreButtonVisualState(System.Boolean)">
            <summary>
            Protected method to set the visual state of the Max/Restore button
            </summary>
            <param name="maximized"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.OnCloseButtonClicked(System.EventArgs)">
            <summary>
            CloseButtonPressed()
            Overridable method called when the user presses the Close button.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the Closed event. 
            </summary>
            <remarks>
            <para>OnClosed raises the Closed event. </para>
            <para>A type that derives from Window may override OnClosed. The overridden method must call 
            OnClosed on the base class if Closed needs to be raised.</para>
            </remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.WindowStateChanged(System.Object,System.EventArgs)">
            <summary>
            StateChanged event handler.  Look for window state changes.  All other maximize requests
            from Windows (right-click on taskbar, etc) are caught and "swallowed" by the custom 
            WndProc() message hook.  Unfortunately, when a window is maximized by way of the Windows 7
            Snap feature (drag window to top of screen), it does not send the WM_SYSCOMMAND/SC_MAXIMIZE
            message and somehow directly maximizes the window.  We therefore have to manage this 
            by catching the WindowState changed event and updating any visuals (like the max/restore button)
            Since we have to do this for the Windows "Snap" feature we funnel any WindowState changes through here 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.SavePreMaximizedState">
            <summary>
            Saves the visual state before the MainWindow is maximized so that it can be restored.
            Very important if the SizeToContent property is set to "HeightAndWidth". This state needs to be saved and restored since it will be overriden to properly support maximizing the mainwindow
            Also sets some important properties (which are later restored) to allow animations
            to work.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.RestorePreMaximizedState">
            <summary>
            Restores the visual state to undo minimized.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.WslMainWindow.SetPosition(System.Windows.Point)">
            <summary>
            Sets the location of the window to the specified position.
            </summary>
            <param name="position">The position to set, as a Point.</param>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Extensions.WpfExtensions">
            <summary>
            Set of static extension methods to augment functionality for various WPF types.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Extensions.WpfExtensions.DumpResources(System.Windows.ResourceDictionary)">
            <summary>
            Dumps the content of the associated ResourceDictionary, including merged dictionaries recursively,
            to the Windows clipboard.
            </summary>
            <param name="resourceDictionary"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Extensions.WpfExtensions.DumpResources(System.Windows.ResourceDictionary,System.IO.TextWriter)">
            <summary>
            Dumps the content of the associated ResourceDictionary, including merged dictionaries recursively,
            to the specified TextWriter object.
            </summary>
            <param name="resourceDictionary"></param>
            <param name="textWriter"></param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Extensions.WpfExtensions.GetElements``1(System.Windows.Controls.Grid,System.Int32,System.Int32)">
            <summary>
            Retrieves the WPF logical elements assigned to the specified Grid row and column.
            </summary>
            <typeparam name="TElement">The type of the elements to search for. Use UIElement to search for all types.</typeparam>
            <param name="grid">A reference to the Grid object to be searched.</param>
            <param name="row">The row in which to search for elements.</param>
            <param name="column">The column in which to search for elements.</param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.Extensions.WpfExtensions.FindDescendant``1(System.Windows.DependencyObject)">
            <summary>
            Finds a dependency object that is a child of the specified object's visual tree.
            </summary>
            <typeparam name="T">The type of child object to find.</typeparam>
            <param name="obj">The object representing the top of the visual tree to search.</param>
            <returns>An object of the specified type or null if the specified type isn't present in the tree.</returns>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.Size">
            <summary>
            The size of the structure, in bytes.
            The caller must set this to sizeof(WINDOWINFO).
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.Window">
            <summary>
            Pointer to a RECT structure
            that specifies the coordinates of the window.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.Client">
            <summary>
            Pointer to a RECT structure
            that specifies the coordinates of the client area.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.Style">
            <summary>
            The window styles. 
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.ExStyle">
            <summary>
            The extended window styles. For a table of extended window styles,
            see CreateWindowEx.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.WindowStatus">
            <summary>
            The window status. If this member is WS_ACTIVECAPTION,
            the window is active. Otherwise, this member is zero.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.WindowBordersWidth">
            <summary>
            The width of the window border, in pixels.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.WindowBordersHeight">
            <summary>
            The height of the window border, in pixels.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.WindowType">
            <summary>
            The window class atom.
            </summary>
        </member>
        <member name="F:Keysight.Ccl.Wsl.UI.NativeMethods.WINDOWINFO.CreatorVersion">
            <summary>
            The Windows version of the application that created the window.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.Media.TraceColors">
            <summary>
            Contains colors and brushes for the display of traces in the Keysight standard trace color palette. 
            </summary>
            <remarks>
            The brushes and colors are lazily initialized when needed and cached so that there will be only one brush and color per trace.
            </remarks>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace1Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 1. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace2Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 2. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace3Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 3. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace4Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 4. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace5Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 5. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace6Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 6.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace7Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 7. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace8Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 8. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace9Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 9. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace10Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 10. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace11Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 11. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace12Brush">
            <summary>
            Gets a SolidBrush that is the Trace color for channel 12.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace1Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 1. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace2Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 2. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace3Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 3. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace4Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 4. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace5Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 5. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace6Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 6. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace7Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 7. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace8Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 8. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace9Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 9. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace10Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 10. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace11Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 11. 
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.Media.TraceColors.Trace12Color">
            <summary>
            Gets a Color structure that is the Trace color for channel 12. 
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.ViewModelBase">
            <summary>
            Base class for all ViewModel classes in the application.
            It provides support for property change notifications 
            and has a DisplayName property.  This class is abstract.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ViewModelBase.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Sets the specified property's backing field to the specified value if the new value is different than the current value.  
            Also raises the PropertyChanged event.
            </summary>
            <typeparam name="T">Type of the field.</typeparam>
            <param name="field">Reference to the field whose value is to be set.</param>
            <param name="value">The new value for the field.</param>
            <param name="propertyName">The name of the associated property. Used to raise the PropertyChanged event.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ViewModelBase.SetProperty``1(``0@,``0,System.Func{``0,``0},System.String)">
            <summary>
            Sets the specified property's backing field to the specified value if the new value is different than the current value.  
            Also raises the PropertyChanged event.
            </summary>
            <typeparam name="T">Type of the field.</typeparam>
            <param name="field">Reference to the field whose value is to be set.</param>
            <param name="value">The new value for the field.</param>
            <param name="valueModifier">A function that modifies the original value e.g. limit a value to a min or max value.</param>
            <param name="propertyName">The name of the associated property. Used to raise the PropertyChanged event.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ViewModelBase.SetProperty``1(``0@,``0,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Sets the specified property's backing field to the specified value if the new value is different than the current value.  
            Also raises the PropertyChanged event.
            </summary>
            <typeparam name="T">Type of the field.</typeparam>
            <param name="field">Reference to the field whose value is to be set.</param>
            <param name="value">The new value for the field.</param>
            <param name="propertyExpression">Lambda expression that specifies a get on the associated property.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ViewModelBase.SetProperty``1(``0@,``0,System.Func{``0,``0},System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Sets the specified property's backing field to the specified value if the new value is different than the current value.  
            Also raises the PropertyChanged event.
            </summary>
            <typeparam name="T">Type of the field.</typeparam>
            <param name="field">Reference to the field whose value is to be set.</param>
            <param name="value">The new value for the field.</param>
            <param name="valueModifier">A function that modifies the original value e.g. limit a value to a min or max value.</param>
            <param name="propertyExpression">Lambda expression that specifies a get on the associated property.</param>
        </member>
        <member name="E:Keysight.Ccl.Wsl.UI.ViewModelBase.PropertyChanged">
            <summary>
            Raised when a property on this object has a new value.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            Raises this object's PropertyChanged event.
            </summary>
            <param name="propertyName">The name of the associated property.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ViewModelBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises this object's PropertyChanged event.
            </summary>
            <typeparam name="T">Type of the assocatied property.</typeparam>
            <param name="propertyExpression">Lambda expression that specifies a get on the associated property.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.ViewModelBase.DisplayName">
            <summary>
            Returns the user-friendly name of this object.
            Child classes can set this property to a new value
            or override it to determine the value on demand.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.ViewModelBase.ThrowOnInvalidPropertyName">
            <summary>
            Returns whether an exception is thrown or a Debug.Fail() is used
            when an invalid property name is passed to the VerifyPropertyName method.
            The default value is false, but subclasses used by unit tests might 
            override this property's getter to return true.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.ViewModelBase.VerifyPropertyName(System.String)">
            <summary>
            Warns the developer if this object does not have a public property with the specified name. 
            This method does not exist in a Release build.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.CommandViewModel">
            <summary>
            ViewModel for commands that can be data bound to the Command property
            of a WPF element that implements ICommandSource such as a Button.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.CommandViewModel.#ctor(System.String,System.Windows.Input.ICommand)">
            <summary>
            Creates a new instance of a CommandViewModel object.
            </summary>
            <param name="displayName">A name that can be displayed by a GUI element to the end user.</param>
            <param name="command">The command to be invoked.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.CommandViewModel.#ctor(System.String,System.String,System.Windows.Input.ICommand)">
            <summary>
            Creates a new instance of a CommandViewModel object.
            </summary>
            <param name="displayName">A name that can be displayed by a GUI element to the end user.</param>
            <param name="toolTip">The text of the tooltip to display when the cursor is hovered over the command's GUI representation.</param>
            <param name="command">The command to be invoked.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.CommandViewModel.Command">
            <summary>
            The command that is to be invoked.
            </summary>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.CommandViewModel.ToolTipText">
            <summary>
            Gets or set the text of the tooltip to display when the cursor is hovered over the command's GUI representation.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.UI.HyperlinkCommandViewModel">
            <summary>
            ViewModel for commands that can be data bound to the Command property
            of a WPF element that implements ICommandSource and needs to launch a URL.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.HyperlinkCommandViewModel.#ctor(System.String,System.Uri)">
            <summary>
            Creates a new instance of a HyperlinkCommandViewModel object.
            </summary>
            <param name="displayName">A name that can be displayed by a GUI element to the end user.</param>
            <param name="navigateUri">The URL that should be navigated to when the command is invoked.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.HyperlinkCommandViewModel.#ctor(System.String,System.String,System.Uri)">
            <summary>
            Creates a new instance of a HyperlinkCommandViewModel object.
            </summary>
            <param name="displayName">A name that can be displayed by a GUI element to the end user.</param>
            <param name="toolTip">The text for a tooltip associated with the GUI element for this command.</param>
            <param name="navigateUri">The URL that should be navigated to when the command is invoked.</param>
        </member>
        <member name="M:Keysight.Ccl.Wsl.UI.HyperlinkCommandViewModel.#ctor(System.String,System.Uri,System.Func{System.Object,System.Boolean})">
            <summary>
            Creates a new instance of a HyperlinkCommandViewModel object.
            </summary>
            <param name="displayName">A name that can be displayed by a GUI element to the end user.</param>
            <param name="navigateUri">The URL that should be navigated to when the command is invoked.</param>
            <param name="canExecuteMethod">Delegate to execute when CanExecute is called on the command.  This can be null.</param>
        </member>
        <member name="P:Keysight.Ccl.Wsl.UI.HyperlinkCommandViewModel.NavigateUri">
            <summary>
            The Uri that will be navigated to when the command is invoked.
            </summary>
        </member>
        <member name="T:Keysight.Ccl.Wsl.Extensions.NumericExtensions">
            <summary>
            Set of static extension methods to augment functionality for the system numeric types.
            </summary>
        </member>
        <member name="M:Keysight.Ccl.Wsl.Extensions.NumericExtensions.AlmostEquals(System.Double,System.Double)">
            <summary>
            Given the two values, their difference is compared to the epsilon value.  If the difference between them
            is less than or equal to 1E-5, then this function returns <see langword="True"/>. If the difference 
            is more than the allowed epsilon value, the function returns <see langword ="False"/>.
            </summary>
            <param name="value1">The first comparison element.</param>
            <param name="value2">The second comparison element.</param>
            <returns>True if the values are within the range of 1E-5, otherwise false.</returns>
        </member>
        <member name="M:Keysight.Ccl.Wsl.Extensions.NumericExtensions.AlmostEquals(System.Double,System.Double,System.Double)">
            <summary>
            Given the two values, their difference is compared to the epsilon value.  If the difference between them
            is less than the epsilon value or equal to the epsilon value, then this 
            function returns <see langword="True"/>. If the difference is more than the allowed epsilon value, the function 
            returns <see langword ="False"/>.
            </summary>
            <param name="value1">The first comparison element.</param>
            <param name="value2">The second comparison element.</param>
            <param name="epsilon">The allowed difference factor.</param>
            <returns>True if the values are within the range of epsilon, otherwise false.</returns>
        </member>
        <member name="T:System.Diagnostics.Contracts.ContractOptionAttribute">
            <summary>
            Allows setting contract and tool options at assembly, type, or method granularity.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
